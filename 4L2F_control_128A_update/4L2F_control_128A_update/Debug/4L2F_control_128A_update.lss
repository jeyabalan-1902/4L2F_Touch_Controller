
4L2F_control_128A_update.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  00000de8  00000e7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000de8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800128  00800128  00000ea4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ea4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ed4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000f18  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001dfb  00000000  00000000  00001048  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b4  00000000  00000000  00002e43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011ba  00000000  00000000  000037f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  000049b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000607  00000000  00000000  00004c30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000515  00000000  00000000  00005237  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000574c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	59 c0       	rjmp	.+178    	; 0xe4 <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	64 c5       	rjmp	.+2760   	; 0xb0e <__vector_17>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ee       	ldi	r30, 0xE8	; 232
  a0:	fd e0       	ldi	r31, 0x0D	; 13
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 32       	cpi	r26, 0x28	; 40
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e2       	ldi	r26, 0x28	; 40
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 33       	cpi	r26, 0x35	; 53
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	68 d5       	rcall	.+2768   	; 0xb94 <main>
  c4:	8f c6       	rjmp	.+3358   	; 0xde4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <timer1_init>:
void USART_Init(unsigned int ubrr);
void USART_Transmit(uint8_t data);
unsigned char USART_Receive(void);

void timer1_init() {
	TCCR1B |= (1 << WGM12); 
  c8:	8e b5       	in	r24, 0x2e	; 46
  ca:	88 60       	ori	r24, 0x08	; 8
  cc:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 3624;                                        //for a 200ms delay
  ce:	88 e2       	ldi	r24, 0x28	; 40
  d0:	9e e0       	ldi	r25, 0x0E	; 14
  d2:	9b bd       	out	0x2b, r25	; 43
  d4:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= (1 << OCIE1A);                              // Enable Timer1 Compare A interrupt
  d6:	87 b7       	in	r24, 0x37	; 55
  d8:	80 61       	ori	r24, 0x10	; 16
  da:	87 bf       	out	0x37, r24	; 55
	TCCR1B |= (1 << CS12) | (1 << CS10);                 // Set prescaler to 1024
  dc:	8e b5       	in	r24, 0x2e	; 46
  de:	85 60       	ori	r24, 0x05	; 5
  e0:	8e bd       	out	0x2e, r24	; 46
  e2:	08 95       	ret

000000e4 <__vector_12>:
}
	
ISR(TIMER1_COMPA_vect) {
  e4:	1f 92       	push	r1
  e6:	0f 92       	push	r0
  e8:	0f b6       	in	r0, 0x3f	; 63
  ea:	0f 92       	push	r0
  ec:	11 24       	eor	r1, r1
  ee:	8f 93       	push	r24
	timer_flag = 1;
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <timer_flag>
}
  f6:	8f 91       	pop	r24
  f8:	0f 90       	pop	r0
  fa:	0f be       	out	0x3f, r0	; 63
  fc:	0f 90       	pop	r0
  fe:	1f 90       	pop	r1
 100:	18 95       	reti

00000102 <custom_delay_ms>:

void custom_delay_ms(uint16_t ms) {
 102:	ac 01       	movw	r20, r24
	static uint16_t counter = 0;

	if (timer_flag) {
 104:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <timer_flag>
 108:	99 23       	and	r25, r25
 10a:	99 f0       	breq	.+38     	; 0x132 <custom_delay_ms+0x30>
		timer_flag = 0;
 10c:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <timer_flag>
		counter++;
 110:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <counter.1933>
 114:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <counter.1933+0x1>
 118:	2f 5f       	subi	r18, 0xFF	; 255
 11a:	3f 4f       	sbci	r19, 0xFF	; 255
 11c:	30 93 2d 01 	sts	0x012D, r19	; 0x80012d <counter.1933+0x1>
 120:	20 93 2c 01 	sts	0x012C, r18	; 0x80012c <counter.1933>

		if (counter >= ms) {
 124:	24 17       	cp	r18, r20
 126:	35 07       	cpc	r19, r21
 128:	20 f0       	brcs	.+8      	; 0x132 <custom_delay_ms+0x30>
			counter = 0;  // Reset the counter
 12a:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <counter.1933+0x1>
 12e:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <counter.1933>
 132:	08 95       	ret

00000134 <SPI_init_slave>:
		}
	}
}

void SPI_init_slave() {
	DDRB |= (1 << DDB4);// Set MISO (Master In Slave Out) as output
 134:	87 b3       	in	r24, 0x17	; 23
 136:	80 61       	ori	r24, 0x10	; 16
 138:	87 bb       	out	0x17, r24	; 23
	SPCR |= (1 << SPE); // Enable SPI, Set as Slave
 13a:	8d b1       	in	r24, 0x0d	; 13
 13c:	80 64       	ori	r24, 0x40	; 64
 13e:	8d b9       	out	0x0d, r24	; 13
	SPCR |= (1 << SPIE); // Enable SPI interrupt
 140:	8d b1       	in	r24, 0x0d	; 13
 142:	80 68       	ori	r24, 0x80	; 128
 144:	8d b9       	out	0x0d, r24	; 13
 146:	08 95       	ret

00000148 <as0>:
}

//fan 1 speed function

void as0() {                     // Fan1 Speed 0
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
	PORTC &= ~(1 << PC2);
 14c:	85 b3       	in	r24, 0x15	; 21
 14e:	8b 7f       	andi	r24, 0xFB	; 251
 150:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1 << PC1);
 152:	85 b3       	in	r24, 0x15	; 21
 154:	8d 7f       	andi	r24, 0xFD	; 253
 156:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1 << PC0);     // Led Pins
 158:	85 b3       	in	r24, 0x15	; 21
 15a:	8e 7f       	andi	r24, 0xFE	; 254
 15c:	85 bb       	out	0x15, r24	; 21
	PORTG &= ~(1 << PG1);
 15e:	c5 e6       	ldi	r28, 0x65	; 101
 160:	d0 e0       	ldi	r29, 0x00	; 0
 162:	88 81       	ld	r24, Y
 164:	8d 7f       	andi	r24, 0xFD	; 253
 166:	88 83       	st	Y, r24
	PORTG &= ~(1 << PG0);
 168:	88 81       	ld	r24, Y
 16a:	8e 7f       	andi	r24, 0xFE	; 254
 16c:	88 83       	st	Y, r24

	PORTC &= ~(1 << PC7);     //Relay Pins
 16e:	85 b3       	in	r24, 0x15	; 21
 170:	8f 77       	andi	r24, 0x7F	; 127
 172:	85 bb       	out	0x15, r24	; 21
	custom_delay_ms(200);
 174:	88 ec       	ldi	r24, 0xC8	; 200
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	c4 df       	rcall	.-120    	; 0x102 <custom_delay_ms>
	PORTG &= ~(1 << PG2);
 17a:	88 81       	ld	r24, Y
 17c:	8b 7f       	andi	r24, 0xFB	; 251
 17e:	88 83       	st	Y, r24
	custom_delay_ms(200);
 180:	88 ec       	ldi	r24, 0xC8	; 200
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	be df       	rcall	.-132    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA7);
 186:	8b b3       	in	r24, 0x1b	; 27
 188:	8f 77       	andi	r24, 0x7F	; 127
 18a:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 18c:	88 ec       	ldi	r24, 0xC8	; 200
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	b8 df       	rcall	.-144    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA6);
 192:	8b b3       	in	r24, 0x1b	; 27
 194:	8f 7b       	andi	r24, 0xBF	; 191
	custom_delay_ms(200);
 196:	8b bb       	out	0x1b, r24	; 27
 198:	88 ec       	ldi	r24, 0xC8	; 200
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	b2 df       	rcall	.-156    	; 0x102 <custom_delay_ms>
}
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <as1>:

void as1() {
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
	PORTC |= (1 << PC2);
 1a8:	85 b3       	in	r24, 0x15	; 21
 1aa:	84 60       	ori	r24, 0x04	; 4
 1ac:	85 bb       	out	0x15, r24	; 21
	
	PORTC &= ~(1 << PC1);
 1ae:	85 b3       	in	r24, 0x15	; 21
 1b0:	8d 7f       	andi	r24, 0xFD	; 253
 1b2:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1 << PC0);     // Led Pins FAN1 Speed1
 1b4:	85 b3       	in	r24, 0x15	; 21
 1b6:	8e 7f       	andi	r24, 0xFE	; 254
 1b8:	85 bb       	out	0x15, r24	; 21
	PORTG &= ~(1 << PG1);
 1ba:	c5 e6       	ldi	r28, 0x65	; 101
 1bc:	d0 e0       	ldi	r29, 0x00	; 0
 1be:	88 81       	ld	r24, Y
 1c0:	8d 7f       	andi	r24, 0xFD	; 253
 1c2:	88 83       	st	Y, r24
	PORTG &= ~(1 << PG0);
 1c4:	88 81       	ld	r24, Y
 1c6:	8e 7f       	andi	r24, 0xFE	; 254
 1c8:	88 83       	st	Y, r24
	
	PORTC &= ~(1 << PC7);
 1ca:	85 b3       	in	r24, 0x15	; 21
 1cc:	8f 77       	andi	r24, 0x7F	; 127
 1ce:	85 bb       	out	0x15, r24	; 21
	custom_delay_ms(200);
 1d0:	88 ec       	ldi	r24, 0xC8	; 200
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	96 df       	rcall	.-212    	; 0x102 <custom_delay_ms>
	PORTG &=~ (1 << PG2);
 1d6:	88 81       	ld	r24, Y
 1d8:	8b 7f       	andi	r24, 0xFB	; 251
 1da:	88 83       	st	Y, r24
	custom_delay_ms(200);
 1dc:	88 ec       	ldi	r24, 0xC8	; 200
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	90 df       	rcall	.-224    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA7);      //2.2K
 1e2:	8b b3       	in	r24, 0x1b	; 27
 1e4:	80 68       	ori	r24, 0x80	; 128
 1e6:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 1e8:	88 ec       	ldi	r24, 0xC8	; 200
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	8a df       	rcall	.-236    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA6);
 1ee:	8b b3       	in	r24, 0x1b	; 27
 1f0:	8f 7b       	andi	r24, 0xBF	; 191
	custom_delay_ms(200);
 1f2:	8b bb       	out	0x1b, r24	; 27
 1f4:	88 ec       	ldi	r24, 0xC8	; 200
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	84 df       	rcall	.-248    	; 0x102 <custom_delay_ms>
 
}
 1fa:	df 91       	pop	r29
 1fc:	cf 91       	pop	r28
 1fe:	08 95       	ret

00000200 <as2>:

void as2() {
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
	PORTC |= (1 << PC2);
 204:	85 b3       	in	r24, 0x15	; 21
 206:	84 60       	ori	r24, 0x04	; 4
 208:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1 << PC1);
 20a:	85 b3       	in	r24, 0x15	; 21
 20c:	82 60       	ori	r24, 0x02	; 2
 20e:	85 bb       	out	0x15, r24	; 21

	PORTC &= ~(1 << PC0);     // Led Pins FAN1 Speed2
 210:	85 b3       	in	r24, 0x15	; 21
 212:	8e 7f       	andi	r24, 0xFE	; 254
 214:	85 bb       	out	0x15, r24	; 21
	PORTG &= ~(1 << PG1);
 216:	c5 e6       	ldi	r28, 0x65	; 101
 218:	d0 e0       	ldi	r29, 0x00	; 0
 21a:	88 81       	ld	r24, Y
 21c:	8d 7f       	andi	r24, 0xFD	; 253
 21e:	88 83       	st	Y, r24
	PORTG &= ~(1 << PG0);
 220:	88 81       	ld	r24, Y
 222:	8e 7f       	andi	r24, 0xFE	; 254
 224:	88 83       	st	Y, r24

	PORTC &= ~(1 << PC7);
 226:	85 b3       	in	r24, 0x15	; 21
 228:	8f 77       	andi	r24, 0x7F	; 127
 22a:	85 bb       	out	0x15, r24	; 21
	custom_delay_ms(200);
 22c:	88 ec       	ldi	r24, 0xC8	; 200
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	68 df       	rcall	.-304    	; 0x102 <custom_delay_ms>
	PORTG &= ~(1 << PG2);
 232:	88 81       	ld	r24, Y
 234:	8b 7f       	andi	r24, 0xFB	; 251
 236:	88 83       	st	Y, r24
	custom_delay_ms(200);
 238:	88 ec       	ldi	r24, 0xC8	; 200
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	62 df       	rcall	.-316    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA7);
 23e:	8b b3       	in	r24, 0x1b	; 27
 240:	8f 77       	andi	r24, 0x7F	; 127
 242:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 244:	88 ec       	ldi	r24, 0xC8	; 200
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	5c df       	rcall	.-328    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA6);    //3.3k
 24a:	8b b3       	in	r24, 0x1b	; 27
 24c:	80 64       	ori	r24, 0x40	; 64
	custom_delay_ms(200);
 24e:	8b bb       	out	0x1b, r24	; 27
 250:	88 ec       	ldi	r24, 0xC8	; 200
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	56 df       	rcall	.-340    	; 0x102 <custom_delay_ms>
}
 256:	df 91       	pop	r29
 258:	cf 91       	pop	r28
 25a:	08 95       	ret

0000025c <as3>:

void as3() {
 25c:	cf 93       	push	r28
 25e:	df 93       	push	r29
	PORTC |= (1 << PC2);
 260:	85 b3       	in	r24, 0x15	; 21
 262:	84 60       	ori	r24, 0x04	; 4
 264:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1 << PC1);
 266:	85 b3       	in	r24, 0x15	; 21
 268:	82 60       	ori	r24, 0x02	; 2
 26a:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1 << PC0);    // Fan1  Speed 3
 26c:	85 b3       	in	r24, 0x15	; 21
 26e:	81 60       	ori	r24, 0x01	; 1
 270:	85 bb       	out	0x15, r24	; 21
	
	PORTG &= ~(1 << PG1);
 272:	c5 e6       	ldi	r28, 0x65	; 101
 274:	d0 e0       	ldi	r29, 0x00	; 0
 276:	88 81       	ld	r24, Y
 278:	8d 7f       	andi	r24, 0xFD	; 253
 27a:	88 83       	st	Y, r24
	PORTG &= ~(1 << PG0);
 27c:	88 81       	ld	r24, Y
 27e:	8e 7f       	andi	r24, 0xFE	; 254
 280:	88 83       	st	Y, r24

	PORTC &= ~(1 << PC7);
 282:	85 b3       	in	r24, 0x15	; 21
 284:	8f 77       	andi	r24, 0x7F	; 127
 286:	85 bb       	out	0x15, r24	; 21
	custom_delay_ms(200);
 288:	88 ec       	ldi	r24, 0xC8	; 200
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	3a df       	rcall	.-396    	; 0x102 <custom_delay_ms>
	PORTG |= (1 << PG2);      // 4.3K
 28e:	88 81       	ld	r24, Y
 290:	84 60       	ori	r24, 0x04	; 4
 292:	88 83       	st	Y, r24
	custom_delay_ms(200);
 294:	88 ec       	ldi	r24, 0xC8	; 200
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	34 df       	rcall	.-408    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA7);
 29a:	8b b3       	in	r24, 0x1b	; 27
 29c:	8f 77       	andi	r24, 0x7F	; 127
 29e:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 2a0:	88 ec       	ldi	r24, 0xC8	; 200
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	2e df       	rcall	.-420    	; 0x102 <custom_delay_ms>
	
	PORTA |= (1 << PA6);
 2a6:	8b b3       	in	r24, 0x1b	; 27
 2a8:	80 64       	ori	r24, 0x40	; 64
	custom_delay_ms(200);
 2aa:	8b bb       	out	0x1b, r24	; 27
 2ac:	88 ec       	ldi	r24, 0xC8	; 200
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	28 df       	rcall	.-432    	; 0x102 <custom_delay_ms>
}
 2b2:	df 91       	pop	r29
 2b4:	cf 91       	pop	r28
 2b6:	08 95       	ret

000002b8 <as4>:

void as4() {
 2b8:	cf 93       	push	r28
 2ba:	df 93       	push	r29
	PORTC |= (1 << PC2);
 2bc:	85 b3       	in	r24, 0x15	; 21
 2be:	84 60       	ori	r24, 0x04	; 4
 2c0:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1 << PC1);
 2c2:	85 b3       	in	r24, 0x15	; 21
 2c4:	82 60       	ori	r24, 0x02	; 2
 2c6:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1 << PC0);    // Fan1  Speed 4
 2c8:	85 b3       	in	r24, 0x15	; 21
 2ca:	81 60       	ori	r24, 0x01	; 1
 2cc:	85 bb       	out	0x15, r24	; 21
	PORTG |= (1 << PG1);
 2ce:	c5 e6       	ldi	r28, 0x65	; 101
 2d0:	d0 e0       	ldi	r29, 0x00	; 0
 2d2:	88 81       	ld	r24, Y
 2d4:	82 60       	ori	r24, 0x02	; 2
 2d6:	88 83       	st	Y, r24

	PORTG &= ~(1 << PG0);
 2d8:	88 81       	ld	r24, Y
 2da:	8e 7f       	andi	r24, 0xFE	; 254
 2dc:	88 83       	st	Y, r24

	PORTC &= ~(1 << PC7);
 2de:	85 b3       	in	r24, 0x15	; 21
 2e0:	8f 77       	andi	r24, 0x7F	; 127
 2e2:	85 bb       	out	0x15, r24	; 21
	custom_delay_ms(200);
 2e4:	88 ec       	ldi	r24, 0xC8	; 200
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	0c df       	rcall	.-488    	; 0x102 <custom_delay_ms>
	PORTG &= ~(1 << PG2);
 2ea:	88 81       	ld	r24, Y
 2ec:	8b 7f       	andi	r24, 0xFB	; 251
 2ee:	88 83       	st	Y, r24
	custom_delay_ms(200);
 2f0:	88 ec       	ldi	r24, 0xC8	; 200
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	06 df       	rcall	.-500    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA7);   //5.5K
 2f6:	8b b3       	in	r24, 0x1b	; 27
 2f8:	80 68       	ori	r24, 0x80	; 128
 2fa:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 2fc:	88 ec       	ldi	r24, 0xC8	; 200
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	00 df       	rcall	.-512    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA6);
 302:	8b b3       	in	r24, 0x1b	; 27
 304:	80 64       	ori	r24, 0x40	; 64
	custom_delay_ms(200);
 306:	8b bb       	out	0x1b, r24	; 27
 308:	88 ec       	ldi	r24, 0xC8	; 200
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	fa de       	rcall	.-524    	; 0x102 <custom_delay_ms>
}
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <as5>:

void as5() {
 314:	cf 93       	push	r28
 316:	df 93       	push	r29
	PORTC |= (1 << PC2);
 318:	85 b3       	in	r24, 0x15	; 21
 31a:	84 60       	ori	r24, 0x04	; 4
 31c:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1 << PC1);
 31e:	85 b3       	in	r24, 0x15	; 21
 320:	82 60       	ori	r24, 0x02	; 2
 322:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1 << PC0);    // Fan1  Speed 5
 324:	85 b3       	in	r24, 0x15	; 21
 326:	81 60       	ori	r24, 0x01	; 1
 328:	85 bb       	out	0x15, r24	; 21
	PORTG |= (1 << PG1);
 32a:	c5 e6       	ldi	r28, 0x65	; 101
 32c:	d0 e0       	ldi	r29, 0x00	; 0
 32e:	88 81       	ld	r24, Y
 330:	82 60       	ori	r24, 0x02	; 2
 332:	88 83       	st	Y, r24
	PORTG |= (1 << PG0);
 334:	88 81       	ld	r24, Y
 336:	81 60       	ori	r24, 0x01	; 1
 338:	88 83       	st	Y, r24


	PORTC |= (1 << PC7);     //Direct
 33a:	85 b3       	in	r24, 0x15	; 21
 33c:	80 68       	ori	r24, 0x80	; 128
 33e:	85 bb       	out	0x15, r24	; 21
	custom_delay_ms(200);
 340:	88 ec       	ldi	r24, 0xC8	; 200
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	de de       	rcall	.-580    	; 0x102 <custom_delay_ms>
	PORTG &= ~(1 << PG2);
 346:	88 81       	ld	r24, Y
 348:	8b 7f       	andi	r24, 0xFB	; 251
 34a:	88 83       	st	Y, r24
	custom_delay_ms(200);
 34c:	88 ec       	ldi	r24, 0xC8	; 200
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	d8 de       	rcall	.-592    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA7);
 352:	8b b3       	in	r24, 0x1b	; 27
 354:	8f 77       	andi	r24, 0x7F	; 127
 356:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 358:	88 ec       	ldi	r24, 0xC8	; 200
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	d2 de       	rcall	.-604    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA6);
 35e:	8b b3       	in	r24, 0x1b	; 27
 360:	8f 7b       	andi	r24, 0xBF	; 191
	custom_delay_ms(200);
 362:	8b bb       	out	0x1b, r24	; 27
 364:	88 ec       	ldi	r24, 0xC8	; 200
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	cc de       	rcall	.-616    	; 0x102 <custom_delay_ms>
	
}
 36a:	df 91       	pop	r29
 36c:	cf 91       	pop	r28
 36e:	08 95       	ret

00000370 <af0>:

  //fan2 speed function
  
void af0() {
	PORTD &=~ (1 << PD5);
 370:	82 b3       	in	r24, 0x12	; 18
 372:	8f 7d       	andi	r24, 0xDF	; 223
 374:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD4);
 376:	82 b3       	in	r24, 0x12	; 18
 378:	8f 7e       	andi	r24, 0xEF	; 239
 37a:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD3);    /// Fan2  Speed 0
 37c:	82 b3       	in	r24, 0x12	; 18
 37e:	87 7f       	andi	r24, 0xF7	; 247
 380:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD2);
 382:	82 b3       	in	r24, 0x12	; 18
 384:	8b 7f       	andi	r24, 0xFB	; 251
 386:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD1);
 388:	82 b3       	in	r24, 0x12	; 18
 38a:	8d 7f       	andi	r24, 0xFD	; 253
 38c:	82 bb       	out	0x12, r24	; 18

	PORTA &=~ (1 << PA3);
 38e:	8b b3       	in	r24, 0x1b	; 27
 390:	87 7f       	andi	r24, 0xF7	; 247
 392:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 394:	88 ec       	ldi	r24, 0xC8	; 200
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	b4 de       	rcall	.-664    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA2);
 39a:	8b b3       	in	r24, 0x1b	; 27
 39c:	8b 7f       	andi	r24, 0xFB	; 251
 39e:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 3a0:	88 ec       	ldi	r24, 0xC8	; 200
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	ae de       	rcall	.-676    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA1);
 3a6:	8b b3       	in	r24, 0x1b	; 27
 3a8:	8d 7f       	andi	r24, 0xFD	; 253
 3aa:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 3ac:	88 ec       	ldi	r24, 0xC8	; 200
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	a8 de       	rcall	.-688    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA0);
 3b2:	8b b3       	in	r24, 0x1b	; 27
 3b4:	8e 7f       	andi	r24, 0xFE	; 254
	custom_delay_ms(200);
 3b6:	8b bb       	out	0x1b, r24	; 27
 3b8:	88 ec       	ldi	r24, 0xC8	; 200
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	a2 ce       	rjmp	.-700    	; 0x102 <custom_delay_ms>
 3be:	08 95       	ret

000003c0 <af1>:
}
void af1() {
	PORTD |= (1 << PD5);
 3c0:	82 b3       	in	r24, 0x12	; 18
 3c2:	80 62       	ori	r24, 0x20	; 32
 3c4:	82 bb       	out	0x12, r24	; 18

	PORTD &= ~(1 << PD4);
 3c6:	82 b3       	in	r24, 0x12	; 18
 3c8:	8f 7e       	andi	r24, 0xEF	; 239
 3ca:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD3);    /// Fan2  Speed 1
 3cc:	82 b3       	in	r24, 0x12	; 18
 3ce:	87 7f       	andi	r24, 0xF7	; 247
 3d0:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD2);
 3d2:	82 b3       	in	r24, 0x12	; 18
 3d4:	8b 7f       	andi	r24, 0xFB	; 251
 3d6:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD1);
 3d8:	82 b3       	in	r24, 0x12	; 18
 3da:	8d 7f       	andi	r24, 0xFD	; 253
 3dc:	82 bb       	out	0x12, r24	; 18
	
	PORTA &=~ (1 << PA3);
 3de:	8b b3       	in	r24, 0x1b	; 27
 3e0:	87 7f       	andi	r24, 0xF7	; 247
 3e2:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 3e4:	88 ec       	ldi	r24, 0xC8	; 200
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	8c de       	rcall	.-744    	; 0x102 <custom_delay_ms>
	PORTA &=~ (1 << PA2);
 3ea:	8b b3       	in	r24, 0x1b	; 27
 3ec:	8b 7f       	andi	r24, 0xFB	; 251
 3ee:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 3f0:	88 ec       	ldi	r24, 0xC8	; 200
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	86 de       	rcall	.-756    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA1);    //2.2K
 3f6:	8b b3       	in	r24, 0x1b	; 27
 3f8:	82 60       	ori	r24, 0x02	; 2
 3fa:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 3fc:	88 ec       	ldi	r24, 0xC8	; 200
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	80 de       	rcall	.-768    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA0);
 402:	8b b3       	in	r24, 0x1b	; 27
 404:	8e 7f       	andi	r24, 0xFE	; 254
	custom_delay_ms(200);
 406:	8b bb       	out	0x1b, r24	; 27
 408:	88 ec       	ldi	r24, 0xC8	; 200
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	7a ce       	rjmp	.-780    	; 0x102 <custom_delay_ms>
 40e:	08 95       	ret

00000410 <af2>:
}

void af2() {
	PORTD |= (1 << PD5);
 410:	82 b3       	in	r24, 0x12	; 18
 412:	80 62       	ori	r24, 0x20	; 32
 414:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD4);    // Fan2  Speed 2
 416:	82 b3       	in	r24, 0x12	; 18
 418:	80 61       	ori	r24, 0x10	; 16
 41a:	82 bb       	out	0x12, r24	; 18
	
	PORTD &= ~(1 << PD3);
 41c:	82 b3       	in	r24, 0x12	; 18
 41e:	87 7f       	andi	r24, 0xF7	; 247
 420:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD2);
 422:	82 b3       	in	r24, 0x12	; 18
 424:	8b 7f       	andi	r24, 0xFB	; 251
 426:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD1);
 428:	82 b3       	in	r24, 0x12	; 18
 42a:	8d 7f       	andi	r24, 0xFD	; 253
 42c:	82 bb       	out	0x12, r24	; 18
	
	PORTA &= ~(1 << PA3);
 42e:	8b b3       	in	r24, 0x1b	; 27
 430:	87 7f       	andi	r24, 0xF7	; 247
 432:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 434:	88 ec       	ldi	r24, 0xC8	; 200
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	64 de       	rcall	.-824    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA2);
 43a:	8b b3       	in	r24, 0x1b	; 27
 43c:	8b 7f       	andi	r24, 0xFB	; 251
 43e:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 440:	88 ec       	ldi	r24, 0xC8	; 200
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	5e de       	rcall	.-836    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA1);
 446:	8b b3       	in	r24, 0x1b	; 27
 448:	8d 7f       	andi	r24, 0xFD	; 253
 44a:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 44c:	88 ec       	ldi	r24, 0xC8	; 200
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	58 de       	rcall	.-848    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA0);   //3.3K
 452:	8b b3       	in	r24, 0x1b	; 27
 454:	81 60       	ori	r24, 0x01	; 1
	custom_delay_ms(200);
 456:	8b bb       	out	0x1b, r24	; 27
 458:	88 ec       	ldi	r24, 0xC8	; 200
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	52 ce       	rjmp	.-860    	; 0x102 <custom_delay_ms>
 45e:	08 95       	ret

00000460 <af3>:
}

void af3() {
	PORTD |= (1 << PD5);
 460:	82 b3       	in	r24, 0x12	; 18
 462:	80 62       	ori	r24, 0x20	; 32
 464:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD4);
 466:	82 b3       	in	r24, 0x12	; 18
 468:	80 61       	ori	r24, 0x10	; 16
 46a:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD3);      // Fan2  Speed 3
 46c:	82 b3       	in	r24, 0x12	; 18
 46e:	88 60       	ori	r24, 0x08	; 8
 470:	82 bb       	out	0x12, r24	; 18
	
	PORTD &= ~(1 << PD2);
 472:	82 b3       	in	r24, 0x12	; 18
 474:	8b 7f       	andi	r24, 0xFB	; 251
 476:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << PD1);
 478:	82 b3       	in	r24, 0x12	; 18
 47a:	8d 7f       	andi	r24, 0xFD	; 253
 47c:	82 bb       	out	0x12, r24	; 18

	PORTA &= ~(1 << PA3);
 47e:	8b b3       	in	r24, 0x1b	; 27
 480:	87 7f       	andi	r24, 0xF7	; 247
 482:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 484:	88 ec       	ldi	r24, 0xC8	; 200
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	3c de       	rcall	.-904    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA2);  //1K+3.3K = 4.3K
 48a:	8b b3       	in	r24, 0x1b	; 27
 48c:	84 60       	ori	r24, 0x04	; 4
 48e:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 490:	88 ec       	ldi	r24, 0xC8	; 200
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	36 de       	rcall	.-916    	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA1);
 496:	8b b3       	in	r24, 0x1b	; 27
 498:	8d 7f       	andi	r24, 0xFD	; 253
 49a:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 49c:	88 ec       	ldi	r24, 0xC8	; 200
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	30 de       	rcall	.-928    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA0);
 4a2:	8b b3       	in	r24, 0x1b	; 27
 4a4:	81 60       	ori	r24, 0x01	; 1
	custom_delay_ms(200);
 4a6:	8b bb       	out	0x1b, r24	; 27
 4a8:	88 ec       	ldi	r24, 0xC8	; 200
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	2a ce       	rjmp	.-940    	; 0x102 <custom_delay_ms>
 4ae:	08 95       	ret

000004b0 <af4>:
}

void af4() {
	PORTD |= (1 << PD5);
 4b0:	82 b3       	in	r24, 0x12	; 18
 4b2:	80 62       	ori	r24, 0x20	; 32
 4b4:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD4);
 4b6:	82 b3       	in	r24, 0x12	; 18
 4b8:	80 61       	ori	r24, 0x10	; 16
 4ba:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD3);      // Fan2  Speed 4
 4bc:	82 b3       	in	r24, 0x12	; 18
 4be:	88 60       	ori	r24, 0x08	; 8
 4c0:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD2);
 4c2:	82 b3       	in	r24, 0x12	; 18
 4c4:	84 60       	ori	r24, 0x04	; 4
 4c6:	82 bb       	out	0x12, r24	; 18

	PORTD &= ~(1 << PD1);
 4c8:	82 b3       	in	r24, 0x12	; 18
 4ca:	8d 7f       	andi	r24, 0xFD	; 253
 4cc:	82 bb       	out	0x12, r24	; 18
	
	PORTA &=~ (1 << PA3);
 4ce:	8b b3       	in	r24, 0x1b	; 27
 4d0:	87 7f       	andi	r24, 0xF7	; 247
 4d2:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 4d4:	88 ec       	ldi	r24, 0xC8	; 200
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	14 de       	rcall	.-984    	; 0x102 <custom_delay_ms>
	PORTA &=~ (1 << PA2);
 4da:	8b b3       	in	r24, 0x1b	; 27
 4dc:	8b 7f       	andi	r24, 0xFB	; 251
 4de:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 4e0:	88 ec       	ldi	r24, 0xC8	; 200
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e de       	rcall	.-996    	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA1);  //2.2K +3.3K = 5.5K
 4e6:	8b b3       	in	r24, 0x1b	; 27
 4e8:	82 60       	ori	r24, 0x02	; 2
 4ea:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 4ec:	88 ec       	ldi	r24, 0xC8	; 200
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	08 de       	rcall	.-1008   	; 0x102 <custom_delay_ms>
	PORTA |= (1 << PA0);
 4f2:	8b b3       	in	r24, 0x1b	; 27
 4f4:	81 60       	ori	r24, 0x01	; 1
	custom_delay_ms(200);
 4f6:	8b bb       	out	0x1b, r24	; 27
 4f8:	88 ec       	ldi	r24, 0xC8	; 200
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	02 ce       	rjmp	.-1020   	; 0x102 <custom_delay_ms>
 4fe:	08 95       	ret

00000500 <af5>:
}

void af5() {
	PORTD |= (1 << PD5);
 500:	82 b3       	in	r24, 0x12	; 18
 502:	80 62       	ori	r24, 0x20	; 32
 504:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD4);
 506:	82 b3       	in	r24, 0x12	; 18
 508:	80 61       	ori	r24, 0x10	; 16
 50a:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD3);      // Fan2  Speed 5
 50c:	82 b3       	in	r24, 0x12	; 18
 50e:	88 60       	ori	r24, 0x08	; 8
 510:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD2);
 512:	82 b3       	in	r24, 0x12	; 18
 514:	84 60       	ori	r24, 0x04	; 4
 516:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1 << PD1);
 518:	82 b3       	in	r24, 0x12	; 18
 51a:	82 60       	ori	r24, 0x02	; 2
 51c:	82 bb       	out	0x12, r24	; 18

	PORTA |= (1 << PA3);
 51e:	8b b3       	in	r24, 0x1b	; 27
 520:	88 60       	ori	r24, 0x08	; 8
 522:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);     //Direct
 524:	88 ec       	ldi	r24, 0xC8	; 200
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	ec dd       	rcall	.-1064   	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA2);
 52a:	8b b3       	in	r24, 0x1b	; 27
 52c:	8b 7f       	andi	r24, 0xFB	; 251
 52e:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 530:	88 ec       	ldi	r24, 0xC8	; 200
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	e6 dd       	rcall	.-1076   	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA1);
 536:	8b b3       	in	r24, 0x1b	; 27
 538:	8d 7f       	andi	r24, 0xFD	; 253
 53a:	8b bb       	out	0x1b, r24	; 27
	custom_delay_ms(200);
 53c:	88 ec       	ldi	r24, 0xC8	; 200
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	e0 dd       	rcall	.-1088   	; 0x102 <custom_delay_ms>
	PORTA &= ~(1 << PA0);
 542:	8b b3       	in	r24, 0x1b	; 27
 544:	8e 7f       	andi	r24, 0xFE	; 254
	custom_delay_ms(200);
 546:	8b bb       	out	0x1b, r24	; 27
 548:	88 ec       	ldi	r24, 0xC8	; 200
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	da cd       	rjmp	.-1100   	; 0x102 <custom_delay_ms>
 54e:	08 95       	ret

00000550 <read_Last_State_From_EEPROM>:
		}
	}
	SPSR |= (1 << SPIF);
}

void read_Last_State_From_EEPROM(){
 550:	cf 93       	push	r28
 552:	df 93       	push	r29
	lastStates_t.light1state = eeprom_read_byte((uint8_t*)light1_State_Address); // Read Light1state from EEPROM
 554:	80 e0       	ldi	r24, 0x00	; 0
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	30 d4       	rcall	.+2144   	; 0xdba <eeprom_read_byte>
 55a:	cf e2       	ldi	r28, 0x2F	; 47
 55c:	d1 e0       	ldi	r29, 0x01	; 1
 55e:	88 83       	st	Y, r24
	lastStates_t.light2state = eeprom_read_byte((uint8_t*)light2_State_Address); // Read Light2 state from EEPROM
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	2a d4       	rcall	.+2132   	; 0xdba <eeprom_read_byte>
 566:	89 83       	std	Y+1, r24	; 0x01
	lastStates_t.light3state = eeprom_read_byte((uint8_t*)light3_State_Address); // Read Light3 state from EEPROM
 568:	82 e0       	ldi	r24, 0x02	; 2
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	26 d4       	rcall	.+2124   	; 0xdba <eeprom_read_byte>
 56e:	8a 83       	std	Y+2, r24	; 0x02
	lastStates_t.light4state = eeprom_read_byte((uint8_t*)light4_state_Address); // Read light4 state from EEPROM
 570:	83 e0       	ldi	r24, 0x03	; 3
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	22 d4       	rcall	.+2116   	; 0xdba <eeprom_read_byte>
 576:	8b 83       	std	Y+3, r24	; 0x03
	lastStates_t.lastF1state = eeprom_read_byte((uint8_t*)fan1_State_Address);   // Read Fan1 state from EEPROM
 578:	84 e0       	ldi	r24, 0x04	; 4
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	1e d4       	rcall	.+2108   	; 0xdba <eeprom_read_byte>
 57e:	8c 83       	std	Y+4, r24	; 0x04
	lastStates_t.lastF2state = eeprom_read_byte((uint8_t*)fan2_State_Address);   // Read fan2 state from EEPROM
 580:	85 e0       	ldi	r24, 0x05	; 5
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	1a d4       	rcall	.+2100   	; 0xdba <eeprom_read_byte>
 586:	8d 83       	std	Y+5, r24	; 0x05
 588:	df 91       	pop	r29
}
 58a:	cf 91       	pop	r28
 58c:	08 95       	ret

0000058e <clearEEPROM>:
 58e:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <lastStates_t>

void clearEEPROM() {
	if(lastStates_t.light1state == 0xFF){eeprom_write_byte((uint8_t*)light1_State_Address, 0x00);}
 592:	8f 3f       	cpi	r24, 0xFF	; 255
 594:	21 f4       	brne	.+8      	; 0x59e <clearEEPROM+0x10>
 596:	60 e0       	ldi	r22, 0x00	; 0
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	16 d4       	rcall	.+2092   	; 0xdca <eeprom_write_byte>
    if(lastStates_t.light2state == 0xFF){eeprom_write_byte((uint8_t*)light2_State_Address, 0x00);}
 59e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <lastStates_t+0x1>
 5a2:	8f 3f       	cpi	r24, 0xFF	; 255
 5a4:	21 f4       	brne	.+8      	; 0x5ae <clearEEPROM+0x20>
 5a6:	60 e0       	ldi	r22, 0x00	; 0
 5a8:	81 e0       	ldi	r24, 0x01	; 1
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	0e d4       	rcall	.+2076   	; 0xdca <eeprom_write_byte>
	if(lastStates_t.light3state == 0xFF){eeprom_write_byte((uint8_t*)light3_State_Address, 0x00);}
 5ae:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <lastStates_t+0x2>
 5b2:	8f 3f       	cpi	r24, 0xFF	; 255
 5b4:	21 f4       	brne	.+8      	; 0x5be <clearEEPROM+0x30>
 5b6:	60 e0       	ldi	r22, 0x00	; 0
 5b8:	82 e0       	ldi	r24, 0x02	; 2
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	06 d4       	rcall	.+2060   	; 0xdca <eeprom_write_byte>
    if(lastStates_t.light4state == 0xFF){eeprom_write_byte((uint8_t*)light4_state_Address, 0x00);}
 5be:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <lastStates_t+0x3>
 5c2:	8f 3f       	cpi	r24, 0xFF	; 255
 5c4:	21 f4       	brne	.+8      	; 0x5ce <clearEEPROM+0x40>
 5c6:	60 e0       	ldi	r22, 0x00	; 0
 5c8:	83 e0       	ldi	r24, 0x03	; 3
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	fe d3       	rcall	.+2044   	; 0xdca <eeprom_write_byte>
	if(lastStates_t.lastF1state == 0xFF){eeprom_write_byte((uint8_t*)fan1_State_Address, 0x00);}
 5ce:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
 5d2:	8f 3f       	cpi	r24, 0xFF	; 255
 5d4:	21 f4       	brne	.+8      	; 0x5de <clearEEPROM+0x50>
 5d6:	60 e0       	ldi	r22, 0x00	; 0
 5d8:	84 e0       	ldi	r24, 0x04	; 4
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	f6 d3       	rcall	.+2028   	; 0xdca <eeprom_write_byte>
	if(lastStates_t.lastF2state == 0xFF){eeprom_write_byte((uint8_t*)fan2_State_Address, 0x00);}	
 5de:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
 5e2:	8f 3f       	cpi	r24, 0xFF	; 255
 5e4:	21 f4       	brne	.+8      	; 0x5ee <clearEEPROM+0x60>
 5e6:	60 e0       	ldi	r22, 0x00	; 0
 5e8:	85 e0       	ldi	r24, 0x05	; 5
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	ee c3       	rjmp	.+2012   	; 0xdca <eeprom_write_byte>
 5ee:	08 95       	ret

000005f0 <retain_Lights_State_From_EEPROM>:
}

void retain_Lights_State_From_EEPROM(){
	if(lastStates_t.light1state){
 5f0:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <lastStates_t>
 5f4:	88 23       	and	r24, r24
 5f6:	51 f0       	breq	.+20     	; 0x60c <retain_Lights_State_From_EEPROM+0x1c>
		PORTD ^= (1 << PD7);
 5f8:	82 b3       	in	r24, 0x12	; 18
 5fa:	80 58       	subi	r24, 0x80	; 128
 5fc:	82 bb       	out	0x12, r24	; 18
		PORTC ^= (1 << PC5);
 5fe:	95 b3       	in	r25, 0x15	; 21
 600:	80 e2       	ldi	r24, 0x20	; 32
 602:	89 27       	eor	r24, r25
 604:	85 bb       	out	0x15, r24	; 21
		custom_delay_ms(50);
 606:	82 e3       	ldi	r24, 0x32	; 50
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	7b dd       	rcall	.-1290   	; 0x102 <custom_delay_ms>
	}
	if(lastStates_t.light2state){
 60c:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <lastStates_t+0x1>
 610:	88 23       	and	r24, r24
 612:	59 f0       	breq	.+22     	; 0x62a <retain_Lights_State_From_EEPROM+0x3a>
		PORTC ^= (1 << PC3);
 614:	95 b3       	in	r25, 0x15	; 21
 616:	88 e0       	ldi	r24, 0x08	; 8
 618:	89 27       	eor	r24, r25
 61a:	85 bb       	out	0x15, r24	; 21
		PORTC ^= (1 << PC6);
 61c:	95 b3       	in	r25, 0x15	; 21
 61e:	80 e4       	ldi	r24, 0x40	; 64
 620:	89 27       	eor	r24, r25
 622:	85 bb       	out	0x15, r24	; 21
		custom_delay_ms(50);
 624:	82 e3       	ldi	r24, 0x32	; 50
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	6c dd       	rcall	.-1320   	; 0x102 <custom_delay_ms>
	}
	if(lastStates_t.light3state){
 62a:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <lastStates_t+0x2>
 62e:	88 23       	and	r24, r24
 630:	59 f0       	breq	.+22     	; 0x648 <retain_Lights_State_From_EEPROM+0x58>
		PORTD ^= (1 << PD6);
 632:	92 b3       	in	r25, 0x12	; 18
 634:	80 e4       	ldi	r24, 0x40	; 64
 636:	89 27       	eor	r24, r25
 638:	82 bb       	out	0x12, r24	; 18
		PORTA ^= (1 << PA5);
 63a:	9b b3       	in	r25, 0x1b	; 27
 63c:	80 e2       	ldi	r24, 0x20	; 32
 63e:	89 27       	eor	r24, r25
 640:	8b bb       	out	0x1b, r24	; 27
		custom_delay_ms(50);
 642:	82 e3       	ldi	r24, 0x32	; 50
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	5d dd       	rcall	.-1350   	; 0x102 <custom_delay_ms>
	}
	if(lastStates_t.light4state){
 648:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <lastStates_t+0x3>
 64c:	88 23       	and	r24, r24
 64e:	51 f0       	breq	.+20     	; 0x664 <retain_Lights_State_From_EEPROM+0x74>
		PORTC ^= (1 << PC4);
 650:	95 b3       	in	r25, 0x15	; 21
 652:	80 e1       	ldi	r24, 0x10	; 16
 654:	98 27       	eor	r25, r24
 656:	95 bb       	out	0x15, r25	; 21
		PORTA ^= (1 << PA4);
 658:	9b b3       	in	r25, 0x1b	; 27
 65a:	89 27       	eor	r24, r25
		custom_delay_ms(50);
 65c:	8b bb       	out	0x1b, r24	; 27
 65e:	82 e3       	ldi	r24, 0x32	; 50
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	4f cd       	rjmp	.-1378   	; 0x102 <custom_delay_ms>
 664:	08 95       	ret

00000666 <retain_Fans_State_From_EEPROM>:
	}
}

void retain_Fans_State_From_EEPROM(){
	if(lastStates_t.lastF1state == 0){
 666:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
 66a:	81 11       	cpse	r24, r1
 66c:	04 c0       	rjmp	.+8      	; 0x676 <retain_Fans_State_From_EEPROM+0x10>
		as0();
 66e:	6c dd       	rcall	.-1320   	; 0x148 <as0>
		custom_delay_ms(100);
 670:	84 e6       	ldi	r24, 0x64	; 100
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	46 dd       	rcall	.-1396   	; 0x102 <custom_delay_ms>
	}
	if(lastStates_t.lastF1state == 1){
 676:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
 67a:	81 30       	cpi	r24, 0x01	; 1
		as3();
 67c:	21 f4       	brne	.+8      	; 0x686 <retain_Fans_State_From_EEPROM+0x20>
		custom_delay_ms(100);
 67e:	ee dd       	rcall	.-1060   	; 0x25c <as3>
 680:	84 e6       	ldi	r24, 0x64	; 100
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	3e dd       	rcall	.-1412   	; 0x102 <custom_delay_ms>
	}
	if(lastStates_t.lastF2state == 0){
 686:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
 68a:	81 11       	cpse	r24, r1
		af0();
 68c:	04 c0       	rjmp	.+8      	; 0x696 <retain_Fans_State_From_EEPROM+0x30>
 68e:	70 de       	rcall	.-800    	; 0x370 <af0>
		custom_delay_ms(100);
 690:	84 e6       	ldi	r24, 0x64	; 100
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	36 dd       	rcall	.-1428   	; 0x102 <custom_delay_ms>
	}
	if(lastStates_t.lastF2state == 1){
 696:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
 69a:	81 30       	cpi	r24, 0x01	; 1
		af3();
 69c:	21 f4       	brne	.+8      	; 0x6a6 <retain_Fans_State_From_EEPROM+0x40>
 69e:	e0 de       	rcall	.-576    	; 0x460 <af3>
		custom_delay_ms(100);
 6a0:	84 e6       	ldi	r24, 0x64	; 100
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	2e cd       	rjmp	.-1444   	; 0x102 <custom_delay_ms>
 6a6:	08 95       	ret

000006a8 <USART_Init>:
 6a8:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
}

void USART_Init(unsigned int ubrr)        // UART Initialization
{
	UBRR0H = (unsigned char)(ubrr >> 8);
	UBRR0L = (unsigned char)ubrr;
 6ac:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 6ae:	88 e1       	ldi	r24, 0x18	; 24
 6b0:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
 6b2:	8e e0       	ldi	r24, 0x0E	; 14
 6b4:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 6b8:	08 95       	ret

000006ba <setup>:
		custom_delay_ms(100);
	}
}

void setup(){
	timer1_init();
 6ba:	06 dd       	rcall	.-1524   	; 0xc8 <timer1_init>
	SPI_init_slave(); // Initialize SPI as a slave
 6bc:	3b dd       	rcall	.-1418   	; 0x134 <SPI_init_slave>
 6be:	87 e6       	ldi	r24, 0x67	; 103
	USART_Init(MYUBRR); //Initialize Uart
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	f2 df       	rcall	.-28     	; 0x6a8 <USART_Init>
 6c4:	78 94       	sei
	sei(); // global interrupt
 6c6:	81 b3       	in	r24, 0x11	; 17
	
	DDRD |= (1 << PD1) |(1 << PD2) |(1 << PD3) |(1 << PD4) |(1 << PD5) |(1 << PD6) |(1 << PD7);              // Set PORTD pins as output
 6c8:	8e 6f       	ori	r24, 0xFE	; 254
 6ca:	81 bb       	out	0x11, r24	; 17
 6cc:	e4 e6       	ldi	r30, 0x64	; 100
	DDRG |= (1 << PG0) | (1 << PG1)| (1 << PG2);                                                             // Set PORTG pins 0 and 1 as output for LEDs
 6ce:	f0 e0       	ldi	r31, 0x00	; 0
 6d0:	80 81       	ld	r24, Z
 6d2:	87 60       	ori	r24, 0x07	; 7
 6d4:	80 83       	st	Z, r24
 6d6:	84 b3       	in	r24, 0x14	; 20
	DDRC |= (1 << PC5) | (1 << PC6)| (1 << PC7)| (1 << PC0)| (1 << PC1)| (1 << PC2)| (1 << PC3)| (1 << PC4); // Set PORTC pins as output
 6d8:	8f ef       	ldi	r24, 0xFF	; 255
 6da:	84 bb       	out	0x14, r24	; 20
 6dc:	9a b3       	in	r25, 0x1a	; 26
	DDRA |= (1 << PA5) | (1 << PA4)|(1 << PA7) | (1 << PA6)| (1 << PA3)|(1 << PA2) | (1 << PA1)| (1 << PA0); // Set PORTA pins as output
 6de:	8a bb       	out	0x1a, r24	; 26
 6e0:	08 95       	ret

000006e2 <USART_Transmit>:
 6e2:	5d 9b       	sbis	0x0b, 5	; 11
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
	UCSR0C = (1 << USBS0) | (3 << UCSZ00);
}

void USART_Transmit(uint8_t data) {    // UART Transmit function
	while (!(UCSR0A & (1 << UDRE0)));
 6e4:	fe cf       	rjmp	.-4      	; 0x6e2 <USART_Transmit>
	UDR0 = data;	
 6e6:	8c b9       	out	0x0c, r24	; 12
 6e8:	08 95       	ret

000006ea <processCommand>:
	custom_delay_ms(200);
}

//SPI received data 

void processCommand(const char* command){
 6ea:	cf 93       	push	r28
 6ec:	df 93       	push	r29
 6ee:	ec 01       	movw	r28, r24
	
	if(strcmp(command, "P1") == 0){     //Hard Reset
 6f0:	60 e0       	ldi	r22, 0x00	; 0
 6f2:	71 e0       	ldi	r23, 0x01	; 1
 6f4:	59 d3       	rcall	.+1714   	; 0xda8 <strcmp>
 6f6:	89 2b       	or	r24, r25
 6f8:	19 f4       	brne	.+6      	; 0x700 <processCommand+0x16>
		USART_Transmit('Q');
 6fa:	81 e5       	ldi	r24, 0x51	; 81
 6fc:	f2 df       	rcall	.-28     	; 0x6e2 <USART_Transmit>
 6fe:	04 c2       	rjmp	.+1032   	; 0xb08 <processCommand+0x41e>
	}
	
	else if(strcmp(command, "L1") == 0){      // Light 1
 700:	63 e0       	ldi	r22, 0x03	; 3
 702:	71 e0       	ldi	r23, 0x01	; 1
 704:	ce 01       	movw	r24, r28
 706:	50 d3       	rcall	.+1696   	; 0xda8 <strcmp>
 708:	89 2b       	or	r24, r25
		USART_Transmit('S');
 70a:	d9 f4       	brne	.+54     	; 0x742 <processCommand+0x58>
 70c:	83 e5       	ldi	r24, 0x53	; 83
 70e:	e9 df       	rcall	.-46     	; 0x6e2 <USART_Transmit>
		PORTD ^= (1 << PD7);
 710:	82 b3       	in	r24, 0x12	; 18
 712:	80 58       	subi	r24, 0x80	; 128
 714:	82 bb       	out	0x12, r24	; 18
		PORTC ^= (1 << PC5);     // toggle the LED & Relay
 716:	95 b3       	in	r25, 0x15	; 21
 718:	80 e2       	ldi	r24, 0x20	; 32
 71a:	89 27       	eor	r24, r25
 71c:	85 bb       	out	0x15, r24	; 21
		uint8_t newLightState_1 = (lastStates_t.light1state == 0) ? 1 : 0;
 71e:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <lastStates_t>
 722:	81 e0       	ldi	r24, 0x01	; 1
 724:	91 11       	cpse	r25, r1
 726:	80 e0       	ldi	r24, 0x00	; 0
		if(newLightState_1 != lastStates_t.light1state)
 728:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <lastStates_t>
 72c:	89 17       	cp	r24, r25
 72e:	09 f4       	brne	.+2      	; 0x732 <processCommand+0x48>
 730:	eb c1       	rjmp	.+982    	; 0xb08 <processCommand+0x41e>
		{
			lastStates_t.light1state = newLightState_1;
 732:	ef e2       	ldi	r30, 0x2F	; 47
 734:	f1 e0       	ldi	r31, 0x01	; 1
			eeprom_write_byte((uint8_t*)light1_State_Address,lastStates_t.light1state );
 736:	80 83       	st	Z, r24
 738:	60 81       	ld	r22, Z
 73a:	80 e0       	ldi	r24, 0x00	; 0
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	45 d3       	rcall	.+1674   	; 0xdca <eeprom_write_byte>
		}
	}
	
	else if(strcmp(command, "L2") == 0){      //Light 2
 740:	e3 c1       	rjmp	.+966    	; 0xb08 <processCommand+0x41e>
 742:	66 e0       	ldi	r22, 0x06	; 6
 744:	71 e0       	ldi	r23, 0x01	; 1
 746:	ce 01       	movw	r24, r28
 748:	2f d3       	rcall	.+1630   	; 0xda8 <strcmp>
 74a:	89 2b       	or	r24, r25
		USART_Transmit('P');
 74c:	e1 f4       	brne	.+56     	; 0x786 <processCommand+0x9c>
 74e:	80 e5       	ldi	r24, 0x50	; 80
 750:	c8 df       	rcall	.-112    	; 0x6e2 <USART_Transmit>
		PORTC ^= (1 << PC3);
 752:	95 b3       	in	r25, 0x15	; 21
 754:	88 e0       	ldi	r24, 0x08	; 8
 756:	89 27       	eor	r24, r25
 758:	85 bb       	out	0x15, r24	; 21
		PORTC ^= (1 << PC6);
 75a:	95 b3       	in	r25, 0x15	; 21
 75c:	80 e4       	ldi	r24, 0x40	; 64
 75e:	89 27       	eor	r24, r25
 760:	85 bb       	out	0x15, r24	; 21
		uint8_t newLightState_2 = ( lastStates_t.light2state == 0) ? 1 : 0;
 762:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <lastStates_t+0x1>
 766:	81 e0       	ldi	r24, 0x01	; 1
 768:	91 11       	cpse	r25, r1
 76a:	80 e0       	ldi	r24, 0x00	; 0
		if(newLightState_2 != lastStates_t.light2state){
 76c:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <lastStates_t+0x1>
 770:	89 17       	cp	r24, r25
 772:	09 f4       	brne	.+2      	; 0x776 <processCommand+0x8c>
			lastStates_t.light2state = newLightState_2;
 774:	c9 c1       	rjmp	.+914    	; 0xb08 <processCommand+0x41e>
 776:	ef e2       	ldi	r30, 0x2F	; 47
 778:	f1 e0       	ldi	r31, 0x01	; 1
			eeprom_write_byte((uint8_t*)light2_State_Address, lastStates_t.light2state);
 77a:	81 83       	std	Z+1, r24	; 0x01
 77c:	61 81       	ldd	r22, Z+1	; 0x01
 77e:	81 e0       	ldi	r24, 0x01	; 1
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	23 d3       	rcall	.+1606   	; 0xdca <eeprom_write_byte>
		}
	}
	
	else if (strcmp(command, "L3") == 0) {     //Light 3
 784:	c1 c1       	rjmp	.+898    	; 0xb08 <processCommand+0x41e>
 786:	69 e0       	ldi	r22, 0x09	; 9
 788:	71 e0       	ldi	r23, 0x01	; 1
 78a:	ce 01       	movw	r24, r28
 78c:	0d d3       	rcall	.+1562   	; 0xda8 <strcmp>
 78e:	89 2b       	or	r24, r25
 790:	e1 f4       	brne	.+56     	; 0x7ca <processCommand+0xe0>
		USART_Transmit('R');
 792:	82 e5       	ldi	r24, 0x52	; 82
 794:	a6 df       	rcall	.-180    	; 0x6e2 <USART_Transmit>
 796:	92 b3       	in	r25, 0x12	; 18
		PORTD ^= (1 << PD6);
 798:	80 e4       	ldi	r24, 0x40	; 64
 79a:	89 27       	eor	r24, r25
 79c:	82 bb       	out	0x12, r24	; 18
 79e:	9b b3       	in	r25, 0x1b	; 27
		PORTA ^= (1 << PA5);
 7a0:	80 e2       	ldi	r24, 0x20	; 32
 7a2:	89 27       	eor	r24, r25
 7a4:	8b bb       	out	0x1b, r24	; 27
 7a6:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <lastStates_t+0x2>
		uint8_t newLightState_3 = (lastStates_t.light3state == 0) ? 1 : 0;
 7aa:	81 e0       	ldi	r24, 0x01	; 1
 7ac:	91 11       	cpse	r25, r1
 7ae:	80 e0       	ldi	r24, 0x00	; 0
 7b0:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <lastStates_t+0x2>
		if (newLightState_3 != lastStates_t.light3state){
 7b4:	89 17       	cp	r24, r25
 7b6:	09 f4       	brne	.+2      	; 0x7ba <processCommand+0xd0>
 7b8:	a7 c1       	rjmp	.+846    	; 0xb08 <processCommand+0x41e>
			lastStates_t.light3state = newLightState_3;
 7ba:	ef e2       	ldi	r30, 0x2F	; 47
 7bc:	f1 e0       	ldi	r31, 0x01	; 1
			eeprom_write_byte((uint8_t*)light3_State_Address, lastStates_t.light3state); //Store the Light state 3 in EEPROM
 7be:	82 83       	std	Z+2, r24	; 0x02
 7c0:	62 81       	ldd	r22, Z+2	; 0x02
 7c2:	82 e0       	ldi	r24, 0x02	; 2
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	01 d3       	rcall	.+1538   	; 0xdca <eeprom_write_byte>
		}
	}
	
	else if (strcmp(command, "L4") == 0) {    //Light 4
 7c8:	9f c1       	rjmp	.+830    	; 0xb08 <processCommand+0x41e>
 7ca:	6c e0       	ldi	r22, 0x0C	; 12
 7cc:	71 e0       	ldi	r23, 0x01	; 1
 7ce:	ce 01       	movw	r24, r28
 7d0:	eb d2       	rcall	.+1494   	; 0xda8 <strcmp>
 7d2:	89 2b       	or	r24, r25
 7d4:	d9 f4       	brne	.+54     	; 0x80c <processCommand+0x122>
		USART_Transmit('G');
 7d6:	87 e4       	ldi	r24, 0x47	; 71
 7d8:	84 df       	rcall	.-248    	; 0x6e2 <USART_Transmit>
 7da:	95 b3       	in	r25, 0x15	; 21
		PORTC ^= (1 << PC4);
 7dc:	80 e1       	ldi	r24, 0x10	; 16
 7de:	98 27       	eor	r25, r24
 7e0:	95 bb       	out	0x15, r25	; 21
 7e2:	9b b3       	in	r25, 0x1b	; 27
		PORTA ^= (1 << PA4);
 7e4:	89 27       	eor	r24, r25
 7e6:	8b bb       	out	0x1b, r24	; 27
 7e8:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <lastStates_t+0x3>
		uint8_t newLightState_4 = (lastStates_t.light4state == 0) ? 1 : 0;
 7ec:	81 e0       	ldi	r24, 0x01	; 1
 7ee:	91 11       	cpse	r25, r1
 7f0:	80 e0       	ldi	r24, 0x00	; 0
		if (newLightState_4 != lastStates_t.light4state){
 7f2:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <lastStates_t+0x3>
 7f6:	89 17       	cp	r24, r25
 7f8:	09 f4       	brne	.+2      	; 0x7fc <processCommand+0x112>
			lastStates_t.light4state = newLightState_4;
 7fa:	86 c1       	rjmp	.+780    	; 0xb08 <processCommand+0x41e>
 7fc:	ef e2       	ldi	r30, 0x2F	; 47
 7fe:	f1 e0       	ldi	r31, 0x01	; 1
			eeprom_write_byte((uint8_t*)light4_state_Address, lastStates_t.light4state); //Store the Light state 3 in EEPROM
 800:	83 83       	std	Z+3, r24	; 0x03
 802:	63 81       	ldd	r22, Z+3	; 0x03
 804:	83 e0       	ldi	r24, 0x03	; 3
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	e0 d2       	rcall	.+1472   	; 0xdca <eeprom_write_byte>
		}
	}
	
	else if (strcmp(command, "F0") == 0) {      // Fan 1 ON
 80a:	7e c1       	rjmp	.+764    	; 0xb08 <processCommand+0x41e>
 80c:	6f e0       	ldi	r22, 0x0F	; 15
 80e:	71 e0       	ldi	r23, 0x01	; 1
 810:	ce 01       	movw	r24, r28
 812:	ca d2       	rcall	.+1428   	; 0xda8 <strcmp>
 814:	89 2b       	or	r24, r25
 816:	09 f0       	breq	.+2      	; 0x81a <processCommand+0x130>
 818:	41 c0       	rjmp	.+130    	; 0x89c <processCommand+0x1b2>
		if (lastStates_t.lastF1state == 5) {
 81a:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
			USART_Transmit('F');
 81e:	85 30       	cpi	r24, 0x05	; 5
 820:	39 f4       	brne	.+14     	; 0x830 <processCommand+0x146>
 822:	86 e4       	ldi	r24, 0x46	; 70
			as5();
 824:	5e df       	rcall	.-324    	; 0x6e2 <USART_Transmit>
 826:	76 dd       	rcall	.-1300   	; 0x314 <as5>
			lastStates_t.lastF1state = 5;
 828:	85 e0       	ldi	r24, 0x05	; 5
 82a:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
		}
		else if (lastStates_t.lastF1state == 4) {
 82e:	31 c0       	rjmp	.+98     	; 0x892 <processCommand+0x1a8>
 830:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
			USART_Transmit('E');
 834:	84 30       	cpi	r24, 0x04	; 4
 836:	39 f4       	brne	.+14     	; 0x846 <processCommand+0x15c>
 838:	85 e4       	ldi	r24, 0x45	; 69
			as4();
 83a:	53 df       	rcall	.-346    	; 0x6e2 <USART_Transmit>
 83c:	3d dd       	rcall	.-1414   	; 0x2b8 <as4>
			lastStates_t.lastF1state = 4;
 83e:	84 e0       	ldi	r24, 0x04	; 4
 840:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
		}
		else if (lastStates_t.lastF1state == 3) {
 844:	26 c0       	rjmp	.+76     	; 0x892 <processCommand+0x1a8>
 846:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
			USART_Transmit('D');
 84a:	83 30       	cpi	r24, 0x03	; 3
 84c:	39 f4       	brne	.+14     	; 0x85c <processCommand+0x172>
 84e:	84 e4       	ldi	r24, 0x44	; 68
			as3();
 850:	48 df       	rcall	.-368    	; 0x6e2 <USART_Transmit>
			lastStates_t.lastF1state = 3;
 852:	04 dd       	rcall	.-1528   	; 0x25c <as3>
 854:	83 e0       	ldi	r24, 0x03	; 3
 856:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
		}
		else if (lastStates_t.lastF1state == 2) {
 85a:	1b c0       	rjmp	.+54     	; 0x892 <processCommand+0x1a8>
 85c:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
			USART_Transmit('C');
 860:	82 30       	cpi	r24, 0x02	; 2
 862:	39 f4       	brne	.+14     	; 0x872 <processCommand+0x188>
			as2();
 864:	83 e4       	ldi	r24, 0x43	; 67
 866:	3d df       	rcall	.-390    	; 0x6e2 <USART_Transmit>
			lastStates_t.lastF1state = 4;
 868:	cb dc       	rcall	.-1642   	; 0x200 <as2>
 86a:	84 e0       	ldi	r24, 0x04	; 4
 86c:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
		}
		else if (lastStates_t.lastF1state == 1) {
 870:	10 c0       	rjmp	.+32     	; 0x892 <processCommand+0x1a8>
 872:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
			USART_Transmit('A');
 876:	81 30       	cpi	r24, 0x01	; 1
			as1();
 878:	39 f4       	brne	.+14     	; 0x888 <processCommand+0x19e>
 87a:	81 e4       	ldi	r24, 0x41	; 65
			lastStates_t.lastF1state = 5;
 87c:	32 df       	rcall	.-412    	; 0x6e2 <USART_Transmit>
 87e:	92 dc       	rcall	.-1756   	; 0x1a4 <as1>
 880:	85 e0       	ldi	r24, 0x05	; 5
		}
		else if(lastStates_t.lastF1state == 0){
 882:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
 886:	05 c0       	rjmp	.+10     	; 0x892 <processCommand+0x1a8>
			as1();
 888:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <lastStates_t+0x4>
		}
		eeprom_write_byte((uint8_t*)fan1_State_Address, 1);
 88c:	81 11       	cpse	r24, r1
 88e:	01 c0       	rjmp	.+2      	; 0x892 <processCommand+0x1a8>
 890:	89 dc       	rcall	.-1774   	; 0x1a4 <as1>
 892:	61 e0       	ldi	r22, 0x01	; 1
 894:	84 e0       	ldi	r24, 0x04	; 4
	}
	
	else if (strcmp(command, "F1") == 0) {      //Fan 1 OFF
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	98 d2       	rcall	.+1328   	; 0xdca <eeprom_write_byte>
 89a:	36 c1       	rjmp	.+620    	; 0xb08 <processCommand+0x41e>
 89c:	62 e1       	ldi	r22, 0x12	; 18
 89e:	71 e0       	ldi	r23, 0x01	; 1
 8a0:	ce 01       	movw	r24, r28
		USART_Transmit('B');
 8a2:	82 d2       	rcall	.+1284   	; 0xda8 <strcmp>
 8a4:	89 2b       	or	r24, r25
 8a6:	41 f4       	brne	.+16     	; 0x8b8 <processCommand+0x1ce>
		as0();
 8a8:	82 e4       	ldi	r24, 0x42	; 66
		eeprom_write_byte((uint8_t*)fan1_State_Address, 0);
 8aa:	1b df       	rcall	.-458    	; 0x6e2 <USART_Transmit>
 8ac:	4d dc       	rcall	.-1894   	; 0x148 <as0>
 8ae:	60 e0       	ldi	r22, 0x00	; 0
 8b0:	84 e0       	ldi	r24, 0x04	; 4
 8b2:	90 e0       	ldi	r25, 0x00	; 0
 8b4:	8a d2       	rcall	.+1300   	; 0xdca <eeprom_write_byte>
	}
	
	else if (strcmp(command, "F2") == 0) {         // Fan 2 ON
 8b6:	28 c1       	rjmp	.+592    	; 0xb08 <processCommand+0x41e>
 8b8:	65 e1       	ldi	r22, 0x15	; 21
 8ba:	71 e0       	ldi	r23, 0x01	; 1
 8bc:	ce 01       	movw	r24, r28
 8be:	74 d2       	rcall	.+1256   	; 0xda8 <strcmp>
 8c0:	89 2b       	or	r24, r25
		if (lastStates_t.lastF2state == 5) {
 8c2:	09 f0       	breq	.+2      	; 0x8c6 <processCommand+0x1dc>
 8c4:	41 c0       	rjmp	.+130    	; 0x948 <processCommand+0x25e>
 8c6:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
			USART_Transmit('J');
 8ca:	85 30       	cpi	r24, 0x05	; 5
 8cc:	39 f4       	brne	.+14     	; 0x8dc <processCommand+0x1f2>
			af5();
 8ce:	8a e4       	ldi	r24, 0x4A	; 74
			lastStates_t.lastF2state = 5;
 8d0:	08 df       	rcall	.-496    	; 0x6e2 <USART_Transmit>
 8d2:	16 de       	rcall	.-980    	; 0x500 <af5>
 8d4:	85 e0       	ldi	r24, 0x05	; 5
 8d6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
		}
		else if (lastStates_t.lastF2state == 4) {
 8da:	31 c0       	rjmp	.+98     	; 0x93e <processCommand+0x254>
 8dc:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
			USART_Transmit('I');
 8e0:	84 30       	cpi	r24, 0x04	; 4
			af4();
 8e2:	39 f4       	brne	.+14     	; 0x8f2 <processCommand+0x208>
 8e4:	89 e4       	ldi	r24, 0x49	; 73
			lastStates_t.lastF2state = 4;
 8e6:	fd de       	rcall	.-518    	; 0x6e2 <USART_Transmit>
 8e8:	e3 dd       	rcall	.-1082   	; 0x4b0 <af4>
 8ea:	84 e0       	ldi	r24, 0x04	; 4
 8ec:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
		}
		else if (lastStates_t.lastF2state == 3) {
 8f0:	26 c0       	rjmp	.+76     	; 0x93e <processCommand+0x254>
 8f2:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
			USART_Transmit('X');
 8f6:	83 30       	cpi	r24, 0x03	; 3
			af3();
 8f8:	39 f4       	brne	.+14     	; 0x908 <processCommand+0x21e>
 8fa:	88 e5       	ldi	r24, 0x58	; 88
			lastStates_t.lastF2state = 3;
 8fc:	f2 de       	rcall	.-540    	; 0x6e2 <USART_Transmit>
 8fe:	b0 dd       	rcall	.-1184   	; 0x460 <af3>
 900:	83 e0       	ldi	r24, 0x03	; 3
		}
		else if (lastStates_t.lastF2state == 2) {
 902:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
			USART_Transmit('Z');
 906:	1b c0       	rjmp	.+54     	; 0x93e <processCommand+0x254>
 908:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
			af2();
 90c:	82 30       	cpi	r24, 0x02	; 2
			lastStates_t.lastF2state = 2;
 90e:	39 f4       	brne	.+14     	; 0x91e <processCommand+0x234>
 910:	8a e5       	ldi	r24, 0x5A	; 90
 912:	e7 de       	rcall	.-562    	; 0x6e2 <USART_Transmit>
		}
		else if (lastStates_t.lastF2state == 1){
 914:	7d dd       	rcall	.-1286   	; 0x410 <af2>
 916:	82 e0       	ldi	r24, 0x02	; 2
 918:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
			USART_Transmit('K');
 91c:	10 c0       	rjmp	.+32     	; 0x93e <processCommand+0x254>
 91e:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
			af1();
 922:	81 30       	cpi	r24, 0x01	; 1
			lastStates_t.lastF2state = 1;
 924:	39 f4       	brne	.+14     	; 0x934 <processCommand+0x24a>
 926:	8b e4       	ldi	r24, 0x4B	; 75
 928:	dc de       	rcall	.-584    	; 0x6e2 <USART_Transmit>
 92a:	4a dd       	rcall	.-1388   	; 0x3c0 <af1>
		}
		else if (lastStates_t.lastF2state == 0){
 92c:	81 e0       	ldi	r24, 0x01	; 1
 92e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
			af1();
 932:	05 c0       	rjmp	.+10     	; 0x93e <processCommand+0x254>
		}
		eeprom_write_byte((uint8_t*)fan2_State_Address, 1);
 934:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <lastStates_t+0x5>
 938:	81 11       	cpse	r24, r1
 93a:	01 c0       	rjmp	.+2      	; 0x93e <processCommand+0x254>
 93c:	41 dd       	rcall	.-1406   	; 0x3c0 <af1>
	}
	
	else if (strcmp(command, "F3") == 0) {     //Fan 2 OFF
 93e:	61 e0       	ldi	r22, 0x01	; 1
 940:	85 e0       	ldi	r24, 0x05	; 5
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	42 d2       	rcall	.+1156   	; 0xdca <eeprom_write_byte>
 946:	e0 c0       	rjmp	.+448    	; 0xb08 <processCommand+0x41e>
 948:	68 e1       	ldi	r22, 0x18	; 24
 94a:	71 e0       	ldi	r23, 0x01	; 1
		USART_Transmit('W');
 94c:	ce 01       	movw	r24, r28
 94e:	2c d2       	rcall	.+1112   	; 0xda8 <strcmp>
		af0();
 950:	89 2b       	or	r24, r25
		eeprom_write_byte((uint8_t*)fan2_State_Address, 0);
 952:	41 f4       	brne	.+16     	; 0x964 <processCommand+0x27a>
 954:	87 e5       	ldi	r24, 0x57	; 87
 956:	c5 de       	rcall	.-630    	; 0x6e2 <USART_Transmit>
 958:	0b dd       	rcall	.-1514   	; 0x370 <af0>
 95a:	60 e0       	ldi	r22, 0x00	; 0
 95c:	85 e0       	ldi	r24, 0x05	; 5
	}
	
	else if (strcmp(command, "U1") == 0) {     //Fan 1 Increment
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	34 d2       	rcall	.+1128   	; 0xdca <eeprom_write_byte>
 962:	d2 c0       	rjmp	.+420    	; 0xb08 <processCommand+0x41e>
 964:	6b e1       	ldi	r22, 0x1B	; 27
 966:	71 e0       	ldi	r23, 0x01	; 1
 968:	ce 01       	movw	r24, r28
		if ((PORTC & (1 << PC2)) == 0) {
 96a:	1e d2       	rcall	.+1084   	; 0xda8 <strcmp>
 96c:	89 2b       	or	r24, r25
			USART_Transmit('A');
 96e:	09 f0       	breq	.+2      	; 0x972 <processCommand+0x288>
 970:	35 c0       	rjmp	.+106    	; 0x9dc <processCommand+0x2f2>
			as1();
 972:	aa 99       	sbic	0x15, 2	; 21
 974:	07 c0       	rjmp	.+14     	; 0x984 <processCommand+0x29a>
			lastStates_t.lastF1state = 1;
 976:	81 e4       	ldi	r24, 0x41	; 65
 978:	b4 de       	rcall	.-664    	; 0x6e2 <USART_Transmit>
 97a:	14 dc       	rcall	.-2008   	; 0x1a4 <as1>
		}
		else if ((PORTC & (1 << PC1)) == 0) {
 97c:	81 e0       	ldi	r24, 0x01	; 1
 97e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
			USART_Transmit('C');
			as2();
 982:	27 c0       	rjmp	.+78     	; 0x9d2 <processCommand+0x2e8>
 984:	a9 99       	sbic	0x15, 1	; 21
			lastStates_t.lastF1state = 2;
 986:	07 c0       	rjmp	.+14     	; 0x996 <processCommand+0x2ac>
 988:	83 e4       	ldi	r24, 0x43	; 67
 98a:	ab de       	rcall	.-682    	; 0x6e2 <USART_Transmit>
 98c:	39 dc       	rcall	.-1934   	; 0x200 <as2>
		}
		else if ((PORTC & (1 << PC0)) == 0) {
 98e:	82 e0       	ldi	r24, 0x02	; 2
			USART_Transmit('D');
 990:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
 994:	1e c0       	rjmp	.+60     	; 0x9d2 <processCommand+0x2e8>
			as3();
 996:	a8 99       	sbic	0x15, 0	; 21
 998:	07 c0       	rjmp	.+14     	; 0x9a8 <processCommand+0x2be>
			lastStates_t.lastF1state = 3;
 99a:	84 e4       	ldi	r24, 0x44	; 68
 99c:	a2 de       	rcall	.-700    	; 0x6e2 <USART_Transmit>
 99e:	5e dc       	rcall	.-1860   	; 0x25c <as3>
		}
		else if ((PORTG & (1 << PG1)) == 0) {
 9a0:	83 e0       	ldi	r24, 0x03	; 3
 9a2:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
 9a6:	15 c0       	rjmp	.+42     	; 0x9d2 <processCommand+0x2e8>
			USART_Transmit('E');
 9a8:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
 9ac:	81 fd       	sbrc	r24, 1
			as4();
 9ae:	07 c0       	rjmp	.+14     	; 0x9be <processCommand+0x2d4>
			lastStates_t.lastF1state = 4;
 9b0:	85 e4       	ldi	r24, 0x45	; 69
 9b2:	97 de       	rcall	.-722    	; 0x6e2 <USART_Transmit>
 9b4:	81 dc       	rcall	.-1790   	; 0x2b8 <as4>
 9b6:	84 e0       	ldi	r24, 0x04	; 4
		}
		else if ((PORTG & (1 << PG0)) == 0) {
 9b8:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
 9bc:	0a c0       	rjmp	.+20     	; 0x9d2 <processCommand+0x2e8>
			USART_Transmit('F');
 9be:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
			as5();
 9c2:	80 fd       	sbrc	r24, 0
 9c4:	06 c0       	rjmp	.+12     	; 0x9d2 <processCommand+0x2e8>
			lastStates_t.lastF1state = 5;
 9c6:	86 e4       	ldi	r24, 0x46	; 70
 9c8:	8c de       	rcall	.-744    	; 0x6e2 <USART_Transmit>
		}
		eeprom_write_byte((uint8_t*)fan1_State_Address, 1);
 9ca:	a4 dc       	rcall	.-1720   	; 0x314 <as5>
 9cc:	85 e0       	ldi	r24, 0x05	; 5
 9ce:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
 9d2:	61 e0       	ldi	r22, 0x01	; 1
	}
	
	else if (strcmp(command, "U2") == 0) {        // Fan 2 Increment
 9d4:	84 e0       	ldi	r24, 0x04	; 4
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	f8 d1       	rcall	.+1008   	; 0xdca <eeprom_write_byte>
 9da:	96 c0       	rjmp	.+300    	; 0xb08 <processCommand+0x41e>
 9dc:	6e e1       	ldi	r22, 0x1E	; 30
 9de:	71 e0       	ldi	r23, 0x01	; 1
		if ((PORTD & (1 << PD5)) == 0) {	
 9e0:	ce 01       	movw	r24, r28
			USART_Transmit('K');
 9e2:	e2 d1       	rcall	.+964    	; 0xda8 <strcmp>
 9e4:	89 2b       	or	r24, r25
 9e6:	89 f5       	brne	.+98     	; 0xa4a <processCommand+0x360>
			af1();
 9e8:	95 99       	sbic	0x12, 5	; 18
 9ea:	07 c0       	rjmp	.+14     	; 0x9fa <processCommand+0x310>
			lastStates_t.lastF2state = 1;
 9ec:	8b e4       	ldi	r24, 0x4B	; 75
 9ee:	79 de       	rcall	.-782    	; 0x6e2 <USART_Transmit>
 9f0:	e7 dc       	rcall	.-1586   	; 0x3c0 <af1>
		}
		else if ((PORTD & (1 << PD4)) == 0) {
 9f2:	81 e0       	ldi	r24, 0x01	; 1
			USART_Transmit('Z');
 9f4:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
 9f8:	23 c0       	rjmp	.+70     	; 0xa40 <processCommand+0x356>
			af2();
 9fa:	94 99       	sbic	0x12, 4	; 18
 9fc:	07 c0       	rjmp	.+14     	; 0xa0c <processCommand+0x322>
			lastStates_t.lastF2state = 2;
 9fe:	8a e5       	ldi	r24, 0x5A	; 90
 a00:	70 de       	rcall	.-800    	; 0x6e2 <USART_Transmit>
		}
		
		else if ((PORTD & (1 << PD3)) == 0) {
 a02:	06 dd       	rcall	.-1524   	; 0x410 <af2>
 a04:	82 e0       	ldi	r24, 0x02	; 2
			USART_Transmit('X');
 a06:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
 a0a:	1a c0       	rjmp	.+52     	; 0xa40 <processCommand+0x356>
			af3();
 a0c:	93 99       	sbic	0x12, 3	; 18
			lastStates_t.lastF2state = 3;
 a0e:	07 c0       	rjmp	.+14     	; 0xa1e <processCommand+0x334>
 a10:	88 e5       	ldi	r24, 0x58	; 88
 a12:	67 de       	rcall	.-818    	; 0x6e2 <USART_Transmit>
		}
		else if ((PORTD & (1 << PD2)) == 0) {
 a14:	25 dd       	rcall	.-1462   	; 0x460 <af3>
 a16:	83 e0       	ldi	r24, 0x03	; 3
			USART_Transmit('I');
 a18:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
			af4();
 a1c:	11 c0       	rjmp	.+34     	; 0xa40 <processCommand+0x356>
 a1e:	92 99       	sbic	0x12, 2	; 18
			lastStates_t.lastF2state = 4;
 a20:	07 c0       	rjmp	.+14     	; 0xa30 <processCommand+0x346>
 a22:	89 e4       	ldi	r24, 0x49	; 73
 a24:	5e de       	rcall	.-836    	; 0x6e2 <USART_Transmit>
		}
		
		else if ((PORTD & (1 << PD1)) == 0) {
 a26:	44 dd       	rcall	.-1400   	; 0x4b0 <af4>
 a28:	84 e0       	ldi	r24, 0x04	; 4
			USART_Transmit('J');
 a2a:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
			af5();
 a2e:	08 c0       	rjmp	.+16     	; 0xa40 <processCommand+0x356>
 a30:	91 99       	sbic	0x12, 1	; 18
			lastStates_t.lastF2state = 5;
 a32:	06 c0       	rjmp	.+12     	; 0xa40 <processCommand+0x356>
 a34:	8a e4       	ldi	r24, 0x4A	; 74
 a36:	55 de       	rcall	.-854    	; 0x6e2 <USART_Transmit>
		}
		eeprom_write_byte((uint8_t*)fan2_State_Address, 1);
 a38:	63 dd       	rcall	.-1338   	; 0x500 <af5>
 a3a:	85 e0       	ldi	r24, 0x05	; 5
 a3c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
	}
	
	else if (strcmp(command, "D1") == 0) {    // Fan 1 Decrement
 a40:	61 e0       	ldi	r22, 0x01	; 1
 a42:	85 e0       	ldi	r24, 0x05	; 5
 a44:	90 e0       	ldi	r25, 0x00	; 0
 a46:	c1 d1       	rcall	.+898    	; 0xdca <eeprom_write_byte>
 a48:	5f c0       	rjmp	.+190    	; 0xb08 <processCommand+0x41e>
 a4a:	61 e2       	ldi	r22, 0x21	; 33
		if ((PORTG & (1 << PG0)) != 0) {	
 a4c:	71 e0       	ldi	r23, 0x01	; 1
 a4e:	ce 01       	movw	r24, r28
 a50:	ab d1       	rcall	.+854    	; 0xda8 <strcmp>
 a52:	89 2b       	or	r24, r25
			USART_Transmit('E');
 a54:	61 f5       	brne	.+88     	; 0xaae <processCommand+0x3c4>
 a56:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
			as4();
 a5a:	80 ff       	sbrs	r24, 0
			lastStates_t.lastF1state = 4;
 a5c:	07 c0       	rjmp	.+14     	; 0xa6c <processCommand+0x382>
 a5e:	85 e4       	ldi	r24, 0x45	; 69
 a60:	40 de       	rcall	.-896    	; 0x6e2 <USART_Transmit>
 a62:	2a dc       	rcall	.-1964   	; 0x2b8 <as4>
		}
		else if ((PORTG & (1 << PG1)) != 0) {
 a64:	84 e0       	ldi	r24, 0x04	; 4
 a66:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
			USART_Transmit('D');
 a6a:	1c c0       	rjmp	.+56     	; 0xaa4 <processCommand+0x3ba>
 a6c:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
			as3();
 a70:	81 ff       	sbrs	r24, 1
 a72:	07 c0       	rjmp	.+14     	; 0xa82 <processCommand+0x398>
			lastStates_t.lastF1state = 3;
 a74:	84 e4       	ldi	r24, 0x44	; 68
 a76:	35 de       	rcall	.-918    	; 0x6e2 <USART_Transmit>
 a78:	f1 db       	rcall	.-2078   	; 0x25c <as3>
 a7a:	83 e0       	ldi	r24, 0x03	; 3
		}
		else if ((PORTC & (1 << PC0)) != 0) {
 a7c:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
			USART_Transmit('C');
 a80:	11 c0       	rjmp	.+34     	; 0xaa4 <processCommand+0x3ba>
 a82:	a8 9b       	sbis	0x15, 0	; 21
 a84:	07 c0       	rjmp	.+14     	; 0xa94 <processCommand+0x3aa>
			as2();
 a86:	83 e4       	ldi	r24, 0x43	; 67
 a88:	2c de       	rcall	.-936    	; 0x6e2 <USART_Transmit>
			lastStates_t.lastF1state = 2;
 a8a:	ba db       	rcall	.-2188   	; 0x200 <as2>
 a8c:	82 e0       	ldi	r24, 0x02	; 2
 a8e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
		}
		else if ((PORTC & (1 << PC1)) != 0) {
 a92:	08 c0       	rjmp	.+16     	; 0xaa4 <processCommand+0x3ba>
 a94:	a9 9b       	sbis	0x15, 1	; 21
			USART_Transmit('A');
 a96:	06 c0       	rjmp	.+12     	; 0xaa4 <processCommand+0x3ba>
 a98:	81 e4       	ldi	r24, 0x41	; 65
 a9a:	23 de       	rcall	.-954    	; 0x6e2 <USART_Transmit>
			as1();
 a9c:	83 db       	rcall	.-2298   	; 0x1a4 <as1>
 a9e:	81 e0       	ldi	r24, 0x01	; 1
			lastStates_t.lastF1state = 1;
 aa0:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
 aa4:	61 e0       	ldi	r22, 0x01	; 1
		}
		eeprom_write_byte((uint8_t*)fan1_State_Address, 1);
 aa6:	84 e0       	ldi	r24, 0x04	; 4
 aa8:	90 e0       	ldi	r25, 0x00	; 0
 aaa:	8f d1       	rcall	.+798    	; 0xdca <eeprom_write_byte>
 aac:	2d c0       	rjmp	.+90     	; 0xb08 <processCommand+0x41e>
 aae:	64 e2       	ldi	r22, 0x24	; 36
 ab0:	71 e0       	ldi	r23, 0x01	; 1
	}
	
	else if (strcmp(command, "D2") == 0) {  //Fan 2 Decrement
 ab2:	ce 01       	movw	r24, r28
 ab4:	79 d1       	rcall	.+754    	; 0xda8 <strcmp>
 ab6:	89 2b       	or	r24, r25
 ab8:	39 f5       	brne	.+78     	; 0xb08 <processCommand+0x41e>
 aba:	91 9b       	sbis	0x12, 1	; 18
 abc:	07 c0       	rjmp	.+14     	; 0xacc <processCommand+0x3e2>
 abe:	89 e4       	ldi	r24, 0x49	; 73
		if ((PORTD & (1 << PD1)) != 0) {
 ac0:	10 de       	rcall	.-992    	; 0x6e2 <USART_Transmit>
 ac2:	f6 dc       	rcall	.-1556   	; 0x4b0 <af4>
			USART_Transmit('I');
 ac4:	84 e0       	ldi	r24, 0x04	; 4
 ac6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
			af4();
 aca:	1a c0       	rjmp	.+52     	; 0xb00 <processCommand+0x416>
 acc:	92 9b       	sbis	0x12, 2	; 18
			lastStates_t.lastF2state = 4;
 ace:	07 c0       	rjmp	.+14     	; 0xade <processCommand+0x3f4>
 ad0:	88 e5       	ldi	r24, 0x58	; 88
 ad2:	07 de       	rcall	.-1010   	; 0x6e2 <USART_Transmit>
 ad4:	c5 dc       	rcall	.-1654   	; 0x460 <af3>
		}
		else if ((PORTD & (1 << PD2)) != 0) {
 ad6:	83 e0       	ldi	r24, 0x03	; 3
 ad8:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
			USART_Transmit('X');
 adc:	11 c0       	rjmp	.+34     	; 0xb00 <processCommand+0x416>
 ade:	93 9b       	sbis	0x12, 3	; 18
			af3();
 ae0:	07 c0       	rjmp	.+14     	; 0xaf0 <processCommand+0x406>
 ae2:	8a e5       	ldi	r24, 0x5A	; 90
			lastStates_t.lastF2state = 3;
 ae4:	fe dd       	rcall	.-1028   	; 0x6e2 <USART_Transmit>
 ae6:	94 dc       	rcall	.-1752   	; 0x410 <af2>
 ae8:	82 e0       	ldi	r24, 0x02	; 2
 aea:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
		}
		else if ((PORTD & (1 << PD3)) != 0) {
 aee:	08 c0       	rjmp	.+16     	; 0xb00 <processCommand+0x416>
			USART_Transmit('Z');
 af0:	94 9b       	sbis	0x12, 4	; 18
 af2:	06 c0       	rjmp	.+12     	; 0xb00 <processCommand+0x416>
 af4:	8b e4       	ldi	r24, 0x4B	; 75
			af2();
 af6:	f5 dd       	rcall	.-1046   	; 0x6e2 <USART_Transmit>
 af8:	63 dc       	rcall	.-1850   	; 0x3c0 <af1>
			lastStates_t.lastF2state = 2;
 afa:	81 e0       	ldi	r24, 0x01	; 1
 afc:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
 b00:	61 e0       	ldi	r22, 0x01	; 1
		}
		else if ((PORTD & (1 << PD4)) != 0) {
 b02:	85 e0       	ldi	r24, 0x05	; 5
 b04:	90 e0       	ldi	r25, 0x00	; 0
			USART_Transmit('K');
 b06:	61 d1       	rcall	.+706    	; 0xdca <eeprom_write_byte>
 b08:	df 91       	pop	r29
 b0a:	cf 91       	pop	r28
			af1();
 b0c:	08 95       	ret

00000b0e <__vector_17>:
 b0e:	1f 92       	push	r1
			lastStates_t.lastF2state = 1;
 b10:	0f 92       	push	r0
 b12:	0f b6       	in	r0, 0x3f	; 63
 b14:	0f 92       	push	r0
		}
		eeprom_write_byte((uint8_t*)fan2_State_Address, 1);
 b16:	11 24       	eor	r1, r1
 b18:	0b b6       	in	r0, 0x3b	; 59
 b1a:	0f 92       	push	r0
 b1c:	2f 93       	push	r18
 b1e:	3f 93       	push	r19
	}	
}
 b20:	4f 93       	push	r20
 b22:	5f 93       	push	r21
 b24:	6f 93       	push	r22

ISR(SPI_STC_vect) {
 b26:	7f 93       	push	r23
 b28:	8f 93       	push	r24
 b2a:	9f 93       	push	r25
 b2c:	af 93       	push	r26
 b2e:	bf 93       	push	r27
 b30:	ef 93       	push	r30
 b32:	ff 93       	push	r31
	uint8_t receivedData = SPDR; // Read received data from SPI data register
 b34:	9f b1       	in	r25, 0x0f	; 15
	static char receivedBytes[3];
	static uint8_t byteIndex = 0;
	if (byteIndex < 2) {
 b36:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <byteIndex.1974>
 b3a:	82 30       	cpi	r24, 0x02	; 2
 b3c:	88 f4       	brcc	.+34     	; 0xb60 <__vector_17+0x52>
		receivedBytes[byteIndex] = receivedData;
 b3e:	e8 2f       	mov	r30, r24
 b40:	f0 e0       	ldi	r31, 0x00	; 0
 b42:	e8 5d       	subi	r30, 0xD8	; 216
 b44:	fe 4f       	sbci	r31, 0xFE	; 254
 b46:	90 83       	st	Z, r25
		byteIndex++;
 b48:	8f 5f       	subi	r24, 0xFF	; 255
 b4a:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <byteIndex.1974>
		if (byteIndex == 2) {
 b4e:	82 30       	cpi	r24, 0x02	; 2
 b50:	39 f4       	brne	.+14     	; 0xb60 <__vector_17+0x52>
			receivedBytes[2] = '\0';
 b52:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__data_end+0x2>
			processCommand(receivedBytes);  // Process the received command
 b56:	88 e2       	ldi	r24, 0x28	; 40
 b58:	91 e0       	ldi	r25, 0x01	; 1
 b5a:	c7 dd       	rcall	.-1138   	; 0x6ea <processCommand>
			byteIndex = 0;
 b5c:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <byteIndex.1974>
		}
	}
	SPSR |= (1 << SPIF);
 b60:	8e b1       	in	r24, 0x0e	; 14
 b62:	80 68       	ori	r24, 0x80	; 128
 b64:	8e b9       	out	0x0e, r24	; 14
}
 b66:	ff 91       	pop	r31
 b68:	ef 91       	pop	r30
 b6a:	bf 91       	pop	r27
 b6c:	af 91       	pop	r26
 b6e:	9f 91       	pop	r25
 b70:	8f 91       	pop	r24
 b72:	7f 91       	pop	r23
 b74:	6f 91       	pop	r22
 b76:	5f 91       	pop	r21
 b78:	4f 91       	pop	r20
 b7a:	3f 91       	pop	r19
 b7c:	2f 91       	pop	r18
 b7e:	0f 90       	pop	r0
 b80:	0b be       	out	0x3b, r0	; 59
 b82:	0f 90       	pop	r0
 b84:	0f be       	out	0x3f, r0	; 63
 b86:	0f 90       	pop	r0
 b88:	1f 90       	pop	r1
 b8a:	18 95       	reti

00000b8c <USART_Receive>:
	UDR0 = data;	
}

unsigned char USART_Receive(void)     // UART Received Function
{
	while (!(UCSR0A & (1 << RXC0)));
 b8c:	5f 9b       	sbis	0x0b, 7	; 11
 b8e:	fe cf       	rjmp	.-4      	; 0xb8c <USART_Receive>
	return UDR0;
 b90:	8c b1       	in	r24, 0x0c	; 12
 b92:	08 95       	ret

00000b94 <main>:
	DDRC |= (1 << PC5) | (1 << PC6)| (1 << PC7)| (1 << PC0)| (1 << PC1)| (1 << PC2)| (1 << PC3)| (1 << PC4); // Set PORTC pins as output
	DDRA |= (1 << PA5) | (1 << PA4)|(1 << PA7) | (1 << PA6)| (1 << PA3)|(1 << PA2) | (1 << PA1)| (1 << PA0); // Set PORTA pins as output
}

int main(void){
	setup();
 b94:	92 dd       	rcall	.-1244   	; 0x6ba <setup>
	custom_delay_ms(100);
 b96:	84 e6       	ldi	r24, 0x64	; 100
 b98:	90 e0       	ldi	r25, 0x00	; 0
	read_Last_State_From_EEPROM();
 b9a:	b3 da       	rcall	.-2714   	; 0x102 <custom_delay_ms>
	custom_delay_ms(100);
 b9c:	d9 dc       	rcall	.-1614   	; 0x550 <read_Last_State_From_EEPROM>
 b9e:	84 e6       	ldi	r24, 0x64	; 100
 ba0:	90 e0       	ldi	r25, 0x00	; 0
	retain_Lights_State_From_EEPROM();
 ba2:	af da       	rcall	.-2722   	; 0x102 <custom_delay_ms>
	custom_delay_ms(100);
 ba4:	25 dd       	rcall	.-1462   	; 0x5f0 <retain_Lights_State_From_EEPROM>
 ba6:	84 e6       	ldi	r24, 0x64	; 100
	retain_Fans_State_From_EEPROM();
 ba8:	90 e0       	ldi	r25, 0x00	; 0
	custom_delay_ms(100);
 baa:	ab da       	rcall	.-2730   	; 0x102 <custom_delay_ms>
 bac:	5c dd       	rcall	.-1352   	; 0x666 <retain_Fans_State_From_EEPROM>
 bae:	84 e6       	ldi	r24, 0x64	; 100
 bb0:	90 e0       	ldi	r25, 0x00	; 0
	clearEEPROM();
 bb2:	a7 da       	rcall	.-2738   	; 0x102 <custom_delay_ms>
	
	while (1) {
		custom_delay_ms(200);
 bb4:	ec dc       	rcall	.-1576   	; 0x58e <clearEEPROM>
 bb6:	88 ec       	ldi	r24, 0xC8	; 200
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	a3 da       	rcall	.-2746   	; 0x102 <custom_delay_ms>
		// Receive data
		if (UCSR0A & (1 << RXC0)) {
 bbc:	5f 9b       	sbis	0x0b, 7	; 11
 bbe:	fb cf       	rjmp	.-10     	; 0xbb6 <main+0x22>
			unsigned char receivedData = UDR0;
 bc0:	cc b1       	in	r28, 0x0c	; 12
			// Check the received data for different commands
			if (receivedData == 'L') {
 bc2:	cc 34       	cpi	r28, 0x4C	; 76
 bc4:	f1 f4       	brne	.+60     	; 0xc02 <main+0x6e>
				// Wait for the next character
				receivedData = USART_Receive();
 bc6:	e2 df       	rcall	.-60     	; 0xb8c <USART_Receive>
 bc8:	c8 2f       	mov	r28, r24
 bca:	81 33       	cpi	r24, 0x31	; 49
				if (receivedData == '1') {
 bcc:	51 f4       	brne	.+20     	; 0xbe2 <main+0x4e>
 bce:	82 b3       	in	r24, 0x12	; 18
					PORTD |= (1 << PD7);
 bd0:	80 68       	ori	r24, 0x80	; 128
 bd2:	82 bb       	out	0x12, r24	; 18
 bd4:	85 b3       	in	r24, 0x15	; 21
					PORTC |= (1 << PC5);
 bd6:	80 62       	ori	r24, 0x20	; 32
 bd8:	85 bb       	out	0x15, r24	; 21
 bda:	81 e0       	ldi	r24, 0x01	; 1
					lastStates_t.light1state = 1;
 bdc:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <lastStates_t>
 be0:	0a c0       	rjmp	.+20     	; 0xbf6 <main+0x62>
 be2:	80 33       	cpi	r24, 0x30	; 48
				}
				else if (receivedData == '0') {
 be4:	41 f4       	brne	.+16     	; 0xbf6 <main+0x62>
 be6:	82 b3       	in	r24, 0x12	; 18
					PORTD &= ~(1 << PD7);
 be8:	8f 77       	andi	r24, 0x7F	; 127
 bea:	82 bb       	out	0x12, r24	; 18
					PORTC &= ~(1 << PC5);
 bec:	85 b3       	in	r24, 0x15	; 21
 bee:	8f 7d       	andi	r24, 0xDF	; 223
					lastStates_t.light1state = 0;
 bf0:	85 bb       	out	0x15, r24	; 21
 bf2:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <lastStates_t>
				}
				eeprom_write_byte((uint8_t*)light1_State_Address, lastStates_t.light1state); // Store the Light1 state in EEPROM
 bf6:	60 91 2f 01 	lds	r22, 0x012F	; 0x80012f <lastStates_t>
 bfa:	80 e0       	ldi	r24, 0x00	; 0
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	e5 d0       	rcall	.+458    	; 0xdca <eeprom_write_byte>
 c00:	af c0       	rjmp	.+350    	; 0xd60 <main+0x1cc>
			}
			else if (receivedData == 'M') {
 c02:	cd 34       	cpi	r28, 0x4D	; 77
 c04:	f1 f4       	brne	.+60     	; 0xc42 <main+0xae>
				receivedData = USART_Receive();
 c06:	c2 df       	rcall	.-124    	; 0xb8c <USART_Receive>
 c08:	c8 2f       	mov	r28, r24
 c0a:	81 33       	cpi	r24, 0x31	; 49
				if (receivedData == '1') {
 c0c:	51 f4       	brne	.+20     	; 0xc22 <main+0x8e>
 c0e:	85 b3       	in	r24, 0x15	; 21
					PORTC |= (1 << PC3);
 c10:	88 60       	ori	r24, 0x08	; 8
 c12:	85 bb       	out	0x15, r24	; 21
 c14:	85 b3       	in	r24, 0x15	; 21
					PORTC |= (1 << PC6);
 c16:	80 64       	ori	r24, 0x40	; 64
 c18:	85 bb       	out	0x15, r24	; 21
 c1a:	81 e0       	ldi	r24, 0x01	; 1
					lastStates_t.light2state = 1;
 c1c:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <lastStates_t+0x1>
 c20:	0a c0       	rjmp	.+20     	; 0xc36 <main+0xa2>
 c22:	80 33       	cpi	r24, 0x30	; 48
				}
				
				else if (receivedData == '0') {
 c24:	41 f4       	brne	.+16     	; 0xc36 <main+0xa2>
					PORTC &=~ (1 << PC3);
 c26:	85 b3       	in	r24, 0x15	; 21
 c28:	87 7f       	andi	r24, 0xF7	; 247
 c2a:	85 bb       	out	0x15, r24	; 21
					PORTC &=~ (1 << PC6);
 c2c:	85 b3       	in	r24, 0x15	; 21
 c2e:	8f 7b       	andi	r24, 0xBF	; 191
					lastStates_t.light2state = 0;
 c30:	85 bb       	out	0x15, r24	; 21
 c32:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <lastStates_t+0x1>
				}
				eeprom_write_byte((uint8_t*)light2_State_Address, lastStates_t.light2state); // Store the Light2 state in EEPROM
 c36:	60 91 30 01 	lds	r22, 0x0130	; 0x800130 <lastStates_t+0x1>
 c3a:	81 e0       	ldi	r24, 0x01	; 1
 c3c:	90 e0       	ldi	r25, 0x00	; 0
 c3e:	c5 d0       	rcall	.+394    	; 0xdca <eeprom_write_byte>
 c40:	8f c0       	rjmp	.+286    	; 0xd60 <main+0x1cc>
			}
			else if (receivedData == 'N') {
 c42:	ce 34       	cpi	r28, 0x4E	; 78
 c44:	f1 f4       	brne	.+60     	; 0xc82 <main+0xee>
				receivedData = USART_Receive();
 c46:	a2 df       	rcall	.-188    	; 0xb8c <USART_Receive>
 c48:	c8 2f       	mov	r28, r24
 c4a:	81 33       	cpi	r24, 0x31	; 49
				if (receivedData == '1') {
 c4c:	51 f4       	brne	.+20     	; 0xc62 <main+0xce>
 c4e:	82 b3       	in	r24, 0x12	; 18
					PORTD |= (1 << PD6);
 c50:	80 64       	ori	r24, 0x40	; 64
 c52:	82 bb       	out	0x12, r24	; 18
 c54:	8b b3       	in	r24, 0x1b	; 27
					PORTA |= (1 << PA5);
 c56:	80 62       	ori	r24, 0x20	; 32
 c58:	8b bb       	out	0x1b, r24	; 27
 c5a:	81 e0       	ldi	r24, 0x01	; 1
					lastStates_t.light3state = 1;
 c5c:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <lastStates_t+0x2>
 c60:	0a c0       	rjmp	.+20     	; 0xc76 <main+0xe2>
				}
				else if (receivedData == '0') {
 c62:	80 33       	cpi	r24, 0x30	; 48
 c64:	41 f4       	brne	.+16     	; 0xc76 <main+0xe2>
					PORTD &= ~(1 << PD6);
 c66:	82 b3       	in	r24, 0x12	; 18
 c68:	8f 7b       	andi	r24, 0xBF	; 191
					PORTA &= ~(1 << PA5);
 c6a:	82 bb       	out	0x12, r24	; 18
 c6c:	8b b3       	in	r24, 0x1b	; 27
 c6e:	8f 7d       	andi	r24, 0xDF	; 223
					lastStates_t.light3state = 0;
 c70:	8b bb       	out	0x1b, r24	; 27
 c72:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <lastStates_t+0x2>
				}
				eeprom_write_byte((uint8_t*)light3_State_Address, lastStates_t.light3state); // Store the Light state 3 in EEPROM
 c76:	60 91 31 01 	lds	r22, 0x0131	; 0x800131 <lastStates_t+0x2>
 c7a:	82 e0       	ldi	r24, 0x02	; 2
 c7c:	90 e0       	ldi	r25, 0x00	; 0
 c7e:	a5 d0       	rcall	.+330    	; 0xdca <eeprom_write_byte>
 c80:	6f c0       	rjmp	.+222    	; 0xd60 <main+0x1cc>
			}
			else if (receivedData == 'P') {
 c82:	c0 35       	cpi	r28, 0x50	; 80
 c84:	f1 f4       	brne	.+60     	; 0xcc2 <main+0x12e>
				receivedData = USART_Receive();
 c86:	82 df       	rcall	.-252    	; 0xb8c <USART_Receive>
 c88:	c8 2f       	mov	r28, r24
 c8a:	81 33       	cpi	r24, 0x31	; 49
				if (receivedData == '1') {
 c8c:	51 f4       	brne	.+20     	; 0xca2 <main+0x10e>
 c8e:	85 b3       	in	r24, 0x15	; 21
					PORTC |= (1 << PC4);
 c90:	80 61       	ori	r24, 0x10	; 16
 c92:	85 bb       	out	0x15, r24	; 21
 c94:	8b b3       	in	r24, 0x1b	; 27
					PORTA |= (1 << PA4);
 c96:	80 61       	ori	r24, 0x10	; 16
 c98:	8b bb       	out	0x1b, r24	; 27
 c9a:	81 e0       	ldi	r24, 0x01	; 1
					lastStates_t.light4state = 1;
 c9c:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <lastStates_t+0x3>
 ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <main+0x122>
				}
				else if (receivedData == '0') {
 ca2:	80 33       	cpi	r24, 0x30	; 48
					PORTC &= ~(1 << PC4);
 ca4:	41 f4       	brne	.+16     	; 0xcb6 <main+0x122>
 ca6:	85 b3       	in	r24, 0x15	; 21
 ca8:	8f 7e       	andi	r24, 0xEF	; 239
					PORTA &= ~(1 << PA4);
 caa:	85 bb       	out	0x15, r24	; 21
 cac:	8b b3       	in	r24, 0x1b	; 27
					lastStates_t.light4state = 0;
 cae:	8f 7e       	andi	r24, 0xEF	; 239
 cb0:	8b bb       	out	0x1b, r24	; 27
				}
				eeprom_write_byte((uint8_t*)light4_state_Address, lastStates_t.light4state); // Store the Light state 4 in EEPROM
 cb2:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <lastStates_t+0x3>
 cb6:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <lastStates_t+0x3>
 cba:	83 e0       	ldi	r24, 0x03	; 3
 cbc:	90 e0       	ldi	r25, 0x00	; 0
			}
			else if (receivedData == 'F') {
 cbe:	85 d0       	rcall	.+266    	; 0xdca <eeprom_write_byte>
 cc0:	4f c0       	rjmp	.+158    	; 0xd60 <main+0x1cc>
				receivedData = USART_Receive();
 cc2:	c6 34       	cpi	r28, 0x46	; 70
 cc4:	a1 f4       	brne	.+40     	; 0xcee <main+0x15a>
				if (receivedData == '1') {
 cc6:	62 df       	rcall	.-316    	; 0xb8c <USART_Receive>
					as1();
 cc8:	c8 2f       	mov	r28, r24
 cca:	81 33       	cpi	r24, 0x31	; 49
					lastStates_t.lastF1state = 1;
 ccc:	29 f4       	brne	.+10     	; 0xcd8 <main+0x144>
 cce:	6a da       	rcall	.-2860   	; 0x1a4 <as1>
 cd0:	81 e0       	ldi	r24, 0x01	; 1
				}
				else if (receivedData == '0') {
 cd2:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
					as0();
 cd6:	05 c0       	rjmp	.+10     	; 0xce2 <main+0x14e>
 cd8:	80 33       	cpi	r24, 0x30	; 48
					lastStates_t.lastF1state = 0;
 cda:	19 f4       	brne	.+6      	; 0xce2 <main+0x14e>
				}
				eeprom_write_byte((uint8_t*)fan1_State_Address, lastStates_t.lastF1state);
 cdc:	35 da       	rcall	.-2966   	; 0x148 <as0>
 cde:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <lastStates_t+0x4>
 ce2:	60 91 33 01 	lds	r22, 0x0133	; 0x800133 <lastStates_t+0x4>
 ce6:	84 e0       	ldi	r24, 0x04	; 4
			}
			else if (receivedData == 'U') {
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	6f d0       	rcall	.+222    	; 0xdca <eeprom_write_byte>
				receivedData = USART_Receive();
 cec:	39 c0       	rjmp	.+114    	; 0xd60 <main+0x1cc>
 cee:	c5 35       	cpi	r28, 0x55	; 85
 cf0:	11 f5       	brne	.+68     	; 0xd36 <main+0x1a2>
				if (receivedData == '2') {
 cf2:	4c df       	rcall	.-360    	; 0xb8c <USART_Receive>
					as2();
 cf4:	c8 2f       	mov	r28, r24
 cf6:	82 33       	cpi	r24, 0x32	; 50
					lastStates_t.lastF1state = 2;
 cf8:	29 f4       	brne	.+10     	; 0xd04 <main+0x170>
 cfa:	82 da       	rcall	.-2812   	; 0x200 <as2>
 cfc:	82 e0       	ldi	r24, 0x02	; 2
				}
				else if (receivedData == '3') {
 cfe:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
					as3();
 d02:	14 c0       	rjmp	.+40     	; 0xd2c <main+0x198>
					lastStates_t.lastF1state = 3;
 d04:	83 33       	cpi	r24, 0x33	; 51
 d06:	29 f4       	brne	.+10     	; 0xd12 <main+0x17e>
 d08:	a9 da       	rcall	.-2734   	; 0x25c <as3>
				}
				else if (receivedData == '4') {
 d0a:	83 e0       	ldi	r24, 0x03	; 3
 d0c:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
					as4();
 d10:	0d c0       	rjmp	.+26     	; 0xd2c <main+0x198>
					lastStates_t.lastF1state = 4;
 d12:	84 33       	cpi	r24, 0x34	; 52
 d14:	29 f4       	brne	.+10     	; 0xd20 <main+0x18c>
 d16:	d0 da       	rcall	.-2656   	; 0x2b8 <as4>
				}
				else if (receivedData == '5') {
 d18:	84 e0       	ldi	r24, 0x04	; 4
 d1a:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
					as5();
 d1e:	06 c0       	rjmp	.+12     	; 0xd2c <main+0x198>
					lastStates_t.lastF1state = 5;
 d20:	85 33       	cpi	r24, 0x35	; 53
 d22:	21 f4       	brne	.+8      	; 0xd2c <main+0x198>
				}
				eeprom_write_byte((uint8_t*)fan1_State_Address, 1);
 d24:	f7 da       	rcall	.-2578   	; 0x314 <as5>
 d26:	85 e0       	ldi	r24, 0x05	; 5
 d28:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <lastStates_t+0x4>
 d2c:	61 e0       	ldi	r22, 0x01	; 1
			}
			else if (receivedData == 'G') {
 d2e:	84 e0       	ldi	r24, 0x04	; 4
 d30:	90 e0       	ldi	r25, 0x00	; 0
				receivedData = USART_Receive();
 d32:	4b d0       	rcall	.+150    	; 0xdca <eeprom_write_byte>
 d34:	15 c0       	rjmp	.+42     	; 0xd60 <main+0x1cc>
 d36:	c7 34       	cpi	r28, 0x47	; 71
				if (receivedData == '1') {
 d38:	99 f4       	brne	.+38     	; 0xd60 <main+0x1cc>
					af1();
 d3a:	28 df       	rcall	.-432    	; 0xb8c <USART_Receive>
 d3c:	c8 2f       	mov	r28, r24
					lastStates_t.lastF2state = 1;
 d3e:	81 33       	cpi	r24, 0x31	; 49
 d40:	29 f4       	brne	.+10     	; 0xd4c <main+0x1b8>
 d42:	3e db       	rcall	.-2436   	; 0x3c0 <af1>
 d44:	81 e0       	ldi	r24, 0x01	; 1
				}
				else if (receivedData == '0') {
 d46:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
					af0();
 d4a:	05 c0       	rjmp	.+10     	; 0xd56 <main+0x1c2>
					lastStates_t.lastF2state = 0;
 d4c:	80 33       	cpi	r24, 0x30	; 48
 d4e:	19 f4       	brne	.+6      	; 0xd56 <main+0x1c2>
				}
				eeprom_write_byte((uint8_t*)fan2_State_Address, lastStates_t.lastF2state);
 d50:	0f db       	rcall	.-2530   	; 0x370 <af0>
 d52:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <lastStates_t+0x5>
 d56:	60 91 34 01 	lds	r22, 0x0134	; 0x800134 <lastStates_t+0x5>
			}
			if (receivedData == 'H') {
 d5a:	85 e0       	ldi	r24, 0x05	; 5
 d5c:	90 e0       	ldi	r25, 0x00	; 0
				receivedData = USART_Receive();
 d5e:	35 d0       	rcall	.+106    	; 0xdca <eeprom_write_byte>
 d60:	c8 34       	cpi	r28, 0x48	; 72
				if (receivedData == '2') {
 d62:	09 f0       	breq	.+2      	; 0xd66 <main+0x1d2>
 d64:	28 cf       	rjmp	.-432    	; 0xbb6 <main+0x22>
					af2();
 d66:	12 df       	rcall	.-476    	; 0xb8c <USART_Receive>
 d68:	82 33       	cpi	r24, 0x32	; 50
					lastStates_t.lastF2state = 2;
 d6a:	29 f4       	brne	.+10     	; 0xd76 <main+0x1e2>
 d6c:	51 db       	rcall	.-2398   	; 0x410 <af2>
 d6e:	82 e0       	ldi	r24, 0x02	; 2
 d70:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
				}
				else if (receivedData == '3') {
 d74:	14 c0       	rjmp	.+40     	; 0xd9e <main+0x20a>
					af3();
 d76:	83 33       	cpi	r24, 0x33	; 51
 d78:	29 f4       	brne	.+10     	; 0xd84 <main+0x1f0>
					lastStates_t.lastF2state = 3;
 d7a:	72 db       	rcall	.-2332   	; 0x460 <af3>
 d7c:	83 e0       	ldi	r24, 0x03	; 3
 d7e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
				}
				else if (receivedData == '4') {
 d82:	0d c0       	rjmp	.+26     	; 0xd9e <main+0x20a>
 d84:	84 33       	cpi	r24, 0x34	; 52
					af4();
 d86:	29 f4       	brne	.+10     	; 0xd92 <main+0x1fe>
 d88:	93 db       	rcall	.-2266   	; 0x4b0 <af4>
					lastStates_t.lastF2state = 4;
 d8a:	84 e0       	ldi	r24, 0x04	; 4
 d8c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
 d90:	06 c0       	rjmp	.+12     	; 0xd9e <main+0x20a>
				}
				else if (receivedData == '5') {
 d92:	85 33       	cpi	r24, 0x35	; 53
 d94:	21 f4       	brne	.+8      	; 0xd9e <main+0x20a>
					af5();
 d96:	b4 db       	rcall	.-2200   	; 0x500 <af5>
 d98:	85 e0       	ldi	r24, 0x05	; 5
					lastStates_t.lastF2state = 5;
 d9a:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <lastStates_t+0x5>
 d9e:	61 e0       	ldi	r22, 0x01	; 1
				}
				eeprom_write_byte((uint8_t*)fan2_State_Address, 1);
 da0:	85 e0       	ldi	r24, 0x05	; 5
 da2:	90 e0       	ldi	r25, 0x00	; 0
 da4:	12 d0       	rcall	.+36     	; 0xdca <eeprom_write_byte>
 da6:	07 cf       	rjmp	.-498    	; 0xbb6 <main+0x22>

00000da8 <strcmp>:
 da8:	fb 01       	movw	r30, r22
 daa:	dc 01       	movw	r26, r24
 dac:	8d 91       	ld	r24, X+
 dae:	01 90       	ld	r0, Z+
 db0:	80 19       	sub	r24, r0
 db2:	01 10       	cpse	r0, r1
 db4:	d9 f3       	breq	.-10     	; 0xdac <strcmp+0x4>
 db6:	99 0b       	sbc	r25, r25
 db8:	08 95       	ret

00000dba <eeprom_read_byte>:
 dba:	e1 99       	sbic	0x1c, 1	; 28
 dbc:	fe cf       	rjmp	.-4      	; 0xdba <eeprom_read_byte>
 dbe:	9f bb       	out	0x1f, r25	; 31
 dc0:	8e bb       	out	0x1e, r24	; 30
 dc2:	e0 9a       	sbi	0x1c, 0	; 28
 dc4:	99 27       	eor	r25, r25
 dc6:	8d b3       	in	r24, 0x1d	; 29
 dc8:	08 95       	ret

00000dca <eeprom_write_byte>:
 dca:	26 2f       	mov	r18, r22

00000dcc <eeprom_write_r18>:
 dcc:	e1 99       	sbic	0x1c, 1	; 28
 dce:	fe cf       	rjmp	.-4      	; 0xdcc <eeprom_write_r18>
 dd0:	9f bb       	out	0x1f, r25	; 31
 dd2:	8e bb       	out	0x1e, r24	; 30
 dd4:	2d bb       	out	0x1d, r18	; 29
 dd6:	0f b6       	in	r0, 0x3f	; 63
 dd8:	f8 94       	cli
 dda:	e2 9a       	sbi	0x1c, 2	; 28
 ddc:	e1 9a       	sbi	0x1c, 1	; 28
 dde:	0f be       	out	0x3f, r0	; 63
 de0:	01 96       	adiw	r24, 0x01	; 1
 de2:	08 95       	ret

00000de4 <_exit>:
 de4:	f8 94       	cli

00000de6 <__stop_program>:
 de6:	ff cf       	rjmp	.-2      	; 0xde6 <__stop_program>
